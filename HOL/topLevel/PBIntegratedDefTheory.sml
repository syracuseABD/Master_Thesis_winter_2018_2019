structure PBIntegratedDefTheory :> PBIntegratedDefTheory =
struct
  val _ = if !Globals.print_thy_loads then TextIO.print "Loading PBIntegratedDefTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (* Parents and ML dependencies *)
  local open PBTypeIntegratedTheory aclfoundationTheory
  in end;
  val _ = Theory.link_parents
          ("PBIntegratedDef",
          Arbnum.fromString "1528748851",
          Arbnum.fromString "591160")
          [("PBTypeIntegrated",
           Arbnum.fromString "1528748848",
           Arbnum.fromString "121309"),
           ("aclfoundation",
           Arbnum.fromString "1528688674",
           Arbnum.fromString "95862")];
  val _ = Theory.incorporate_types "PBIntegratedDef" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("list", "list"), ID("aclfoundation", "Form"),
   ID("PBTypeIntegrated", "stateRole"), ID("option", "option"),
   ID("OMNIType", "command"), ID("PBTypeIntegrated", "slCommand"),
   ID("PBTypeIntegrated", "omniCommand"),
   ID("PBTypeIntegrated", "slState"), ID("PBTypeIntegrated", "plCommand"),
   ID("min", "bool"), ID("num", "num"), ID("aclfoundation", "Princ"),
   ID("aclfoundation", "IntLevel"), ID("aclfoundation", "SecLevel"),
   ID("OMNIType", "escCommand"), ID("bool", "!"), ID("bool", "/\\"),
   ID("min", "="), ID("min", "==>"), ID("min", "@"), ID("bool", "COND"),
   ID("PBTypeIntegrated", "CONDUCT_ORP"),
   ID("PBTypeIntegrated", "CONDUCT_PB"), ID("list", "CONS"),
   ID("OMNIType", "ESCc"), ID("aclfoundation", "FF"),
   ID("aclfoundation", "Form_CASE"), ID("combin", "I"),
   ID("PBTypeIntegrated", "MOVE_TO_ORP"),
   ID("PBTypeIntegrated", "MOVE_TO_PB"), ID("list", "NIL"),
   ID("option", "NONE"), ID("aclfoundation", "Name"),
   ID("PBTypeIntegrated", "OMNI"), ID("PBTypeIntegrated", "Omni"),
   ID("PBTypeIntegrated", "PL"), ID("PBTypeIntegrated", "PLAN_PB"),
   ID("PBTypeIntegrated", "PlatoonLeader"),
   ID("aclfoundation", "Princ_CASE"), ID("OMNIType", "SLc"),
   ID("option", "SOME"), ID("aclfoundation", "TT"), ID("relation", "WF"),
   ID("relation", "WFREC"), ID("aclfoundation", "andf"),
   ID("OMNIType", "command_CASE"), ID("PBTypeIntegrated", "completePB"),
   ID("PBTypeIntegrated", "conductORP"),
   ID("PBTypeIntegrated", "conductPB"), ID("aclfoundation", "controls"),
   ID("PBTypeIntegrated", "crossLD"), ID("aclfoundation", "domi"),
   ID("aclfoundation", "doms"), ID("aclfoundation", "eqf"),
   ID("aclfoundation", "eqi"), ID("aclfoundation", "eqn"),
   ID("aclfoundation", "eqs"), ID("PBIntegratedDef", "getOmniCommand"),
   ID("PBIntegratedDef", "getPlCom"), ID("aclfoundation", "impf"),
   ID("PBTypeIntegrated", "incomplete"),
   ID("PBTypeIntegrated", "invalidOmniCommand"), ID("list", "list_CASE"),
   ID("aclfoundation", "lt"), ID("aclfoundation", "lte"),
   ID("aclfoundation", "meet"), ID("PBTypeIntegrated", "moveToPB"),
   ID("aclfoundation", "notf"), ID("option", "option_CASE"),
   ID("aclfoundation", "orf"), ID("aclfoundation", "prop"),
   ID("aclfoundation", "quoting"), ID("aclfoundation", "reps"),
   ID("aclfoundation", "says"), ID("PBIntegratedDef", "secAuthorization"),
   ID("PBIntegratedDef", "secContext"), ID("PBIntegratedDef", "secHelper"),
   ID("PBTypeIntegrated", "slCommand_CASE"),
   ID("aclfoundation", "speaks_for"),
   ID("PBTypeIntegrated", "ssmConductORPComplete"),
   ID("PBTypeIntegrated", "ssmConductPBComplete"),
   ID("PBTypeIntegrated", "ssmMoveToORPComplete"),
   ID("PBTypeIntegrated", "ssmMoveToPBComplete"),
   ID("PBTypeIntegrated", "ssmPlanPBComplete"),
   ID("PBTypeIntegrated", "stateRole_CASE")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'b", TYV "'a", TYOP [3], TYOP [6], TYOP [5, 3], TYOP [4, 4],
   TYOP [2, 5, 2, 1, 0], TYOP [1, 6], TYOP [7], TYOP [0, 8, 7], TYV "'e",
   TYV "'d", TYOP [2, 5, 2, 11, 10], TYOP [1, 12], TYOP [0, 13, 13],
   TYOP [8], TYOP [0, 15, 14], TYOP [0, 13, 7], TYOP [9], TYOP [1, 5],
   TYOP [0, 19, 18], TYOP [0, 13, 8], TYOP [10], TYOP [0, 13, 22],
   TYOP [0, 19, 22], TYOP [0, 13, 23], TYOP [0, 19, 24], TYOP [11],
   TYOP [12, 2], TYOP [13, 2, 11], TYOP [14, 2, 10], TYOP [15],
   TYOP [0, 12, 22], TYOP [0, 32, 22], TYOP [0, 29, 22], TYOP [0, 34, 22],
   TYOP [0, 28, 22], TYOP [0, 36, 22], TYOP [0, 30, 22], TYOP [0, 38, 22],
   TYOP [0, 4, 22], TYOP [0, 40, 22], TYOP [0, 31, 22], TYOP [0, 42, 22],
   TYOP [0, 23, 22], TYOP [0, 44, 22], TYOP [0, 24, 22], TYOP [0, 46, 22],
   TYOP [0, 27, 22], TYOP [0, 48, 22], TYOP [0, 8, 22], TYOP [0, 50, 22],
   TYOP [0, 5, 22], TYOP [0, 52, 22], TYOP [0, 18, 22], TYOP [0, 54, 22],
   TYOP [0, 2, 22], TYOP [0, 56, 22], TYOP [0, 22, 22], TYOP [0, 22, 58],
   TYOP [0, 21, 22], TYOP [0, 21, 60], TYOP [0, 20, 22], TYOP [0, 20, 62],
   TYOP [0, 7, 22], TYOP [0, 7, 64], TYOP [0, 8, 50], TYOP [0, 18, 54],
   TYOP [0, 25, 22], TYOP [0, 68, 25], TYOP [0, 26, 22], TYOP [0, 70, 26],
   TYOP [0, 13, 14], TYOP [0, 22, 72], TYOP [0, 7, 7], TYOP [0, 6, 74],
   TYOP [0, 12, 14], TYOP [0, 19, 19], TYOP [0, 5, 77], TYOP [0, 31, 4],
   TYOP [0, 27, 8], TYOP [0, 27, 80], TYOP [0, 81, 8], TYOP [0, 81, 82],
   TYOP [0, 81, 83], TYOP [0, 30, 8], TYOP [0, 30, 85], TYOP [0, 86, 84],
   TYOP [0, 86, 87], TYOP [0, 29, 8], TYOP [0, 29, 89], TYOP [0, 90, 88],
   TYOP [0, 90, 91], TYOP [0, 12, 8], TYOP [0, 28, 93], TYOP [0, 28, 94],
   TYOP [0, 95, 92], TYOP [0, 94, 96], TYOP [0, 28, 8], TYOP [0, 28, 98],
   TYOP [0, 99, 97], TYOP [0, 94, 100], TYOP [0, 12, 93],
   TYOP [0, 102, 101], TYOP [0, 102, 103], TYOP [0, 102, 104],
   TYOP [0, 102, 105], TYOP [0, 93, 106], TYOP [0, 5, 8],
   TYOP [0, 108, 107], TYOP [0, 8, 109], TYOP [0, 8, 110],
   TYOP [0, 12, 111], TYOP [0, 8, 8], TYOP [0, 18, 18], TYOP [0, 2, 28],
   TYOP [0, 8, 3], TYOP [0, 18, 3], TYOP [0, 99, 8], TYOP [0, 99, 118],
   TYOP [0, 2, 8], TYOP [0, 120, 119], TYOP [0, 28, 121], TYOP [0, 3, 4],
   TYOP [0, 4, 5], TYOP [0, 21, 21], TYOP [0, 125, 21], TYOP [0, 25, 126],
   TYOP [0, 20, 20], TYOP [0, 128, 20], TYOP [0, 26, 129],
   TYOP [0, 12, 12], TYOP [0, 12, 131], TYOP [0, 3, 8], TYOP [0, 133, 8],
   TYOP [0, 31, 8], TYOP [0, 135, 134], TYOP [0, 4, 136], TYOP [0, 3, 18],
   TYOP [0, 138, 18], TYOP [0, 31, 18], TYOP [0, 140, 139],
   TYOP [0, 4, 141], TYOP [0, 6, 6], TYOP [0, 28, 143], TYOP [0, 28, 131],
   TYOP [0, 29, 12], TYOP [0, 29, 146], TYOP [0, 30, 12],
   TYOP [0, 30, 148], TYOP [0, 27, 12], TYOP [0, 27, 150],
   TYOP [0, 12, 21], TYOP [0, 152, 8], TYOP [0, 8, 153], TYOP [0, 13, 154],
   TYOP [0, 5, 20], TYOP [0, 156, 18], TYOP [0, 18, 157],
   TYOP [0, 19, 158], TYOP [0, 28, 28], TYOP [0, 28, 160], TYOP [0, 4, 8],
   TYOP [0, 162, 8], TYOP [0, 8, 163], TYOP [0, 5, 164], TYOP [0, 4, 18],
   TYOP [0, 166, 18], TYOP [0, 18, 167], TYOP [0, 5, 168], TYOP [0, 5, 6],
   TYOP [0, 5, 12], TYOP [0, 28, 145], TYOP [0, 113, 8], TYOP [0, 18, 8],
   TYOP [0, 174, 173], TYOP [0, 3, 175], TYOP [0, 8, 18],
   TYOP [0, 177, 18], TYOP [0, 114, 178], TYOP [0, 3, 179],
   TYOP [0, 28, 12], TYOP [0, 28, 181], TYOP [0, 8, 113], TYOP [0, 2, 183]]
  end
  val _ = Theory.incorporate_consts "PBIntegratedDef" tyvector
     [("secHelper", 9), ("secContext", 16), ("secAuthorization", 17),
      ("getPlCom", 20), ("getOmniCommand", 21)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("P", 23), TMV("P", 24), TMV("R", 25), TMV("R", 26), TMV("a", 13),
   TMV("a", 19), TMV("cmd", 8), TMV("cmd", 18), TMV("getOmniCommand", 21),
   TMV("getPlCom", 20), TMV("v", 12), TMV("v", 13), TMV("v", 19),
   TMV("v", 5), TMV("v10", 12), TMV("v100", 27), TMV("v101", 5),
   TMV("v102", 12), TMV("v103", 12), TMV("v104", 12), TMV("v105", 12),
   TMV("v106", 12), TMV("v107", 12), TMV("v108", 12), TMV("v109", 12),
   TMV("v11", 12), TMV("v11", 8), TMV("v110", 12), TMV("v111", 28),
   TMV("v112", 12), TMV("v113", 28), TMV("v114", 28), TMV("v115", 28),
   TMV("v116", 12), TMV("v117", 28), TMV("v118", 28), TMV("v119", 12),
   TMV("v12", 28), TMV("v120", 29), TMV("v121", 29), TMV("v122", 29),
   TMV("v123", 29), TMV("v124", 30), TMV("v125", 30), TMV("v126", 30),
   TMV("v127", 30), TMV("v128", 27), TMV("v129", 27), TMV("v130", 27),
   TMV("v131", 27), TMV("v132", 27), TMV("v133", 27), TMV("v134", 2),
   TMV("v135", 28), TMV("v136", 28), TMV("v137", 28), TMV("v138", 28),
   TMV("v139", 2), TMV("v14", 28), TMV("v140", 28), TMV("v141", 28),
   TMV("v142", 28), TMV("v143", 28), TMV("v144", 4), TMV("v145", 4),
   TMV("v146", 31), TMV("v148", 31), TMV("v149", 3), TMV("v15", 28),
   TMV("v150", 18), TMV("v152", 18), TMV("v16", 28), TMV("v17", 12),
   TMV("v18", 28), TMV("v19", 28), TMV("v2", 5), TMV("v20", 12),
   TMV("v21", 29), TMV("v22", 29), TMV("v23", 29), TMV("v24", 29),
   TMV("v25", 30), TMV("v26", 30), TMV("v27", 30), TMV("v28", 30),
   TMV("v29", 27), TMV("v3", 12), TMV("v3", 4), TMV("v30", 27),
   TMV("v31", 27), TMV("v32", 27), TMV("v33", 27), TMV("v34", 27),
   TMV("v35", 5), TMV("v36", 12), TMV("v37", 12), TMV("v38", 12),
   TMV("v39", 12), TMV("v4", 12), TMV("v4", 31), TMV("v40", 12),
   TMV("v41", 12), TMV("v42", 12), TMV("v43", 12), TMV("v44", 12),
   TMV("v45", 28), TMV("v46", 12), TMV("v47", 28), TMV("v48", 28),
   TMV("v49", 28), TMV("v5", 12), TMV("v50", 12), TMV("v51", 28),
   TMV("v52", 28), TMV("v53", 12), TMV("v54", 29), TMV("v55", 29),
   TMV("v56", 29), TMV("v57", 29), TMV("v58", 30), TMV("v59", 30),
   TMV("v6", 12), TMV("v6", 31), TMV("v60", 30), TMV("v61", 30),
   TMV("v62", 27), TMV("v63", 27), TMV("v64", 27), TMV("v65", 27),
   TMV("v66", 27), TMV("v67", 27), TMV("v68", 5), TMV("v69", 12),
   TMV("v7", 12), TMV("v7", 3), TMV("v70", 12), TMV("v71", 12),
   TMV("v72", 12), TMV("v73", 12), TMV("v74", 12), TMV("v75", 12),
   TMV("v76", 12), TMV("v77", 12), TMV("v78", 28), TMV("v79", 12),
   TMV("v8", 12), TMV("v80", 28), TMV("v81", 28), TMV("v82", 28),
   TMV("v83", 12), TMV("v84", 28), TMV("v85", 28), TMV("v86", 12),
   TMV("v87", 29), TMV("v88", 29), TMV("v89", 29), TMV("v9", 12),
   TMV("v9", 8), TMV("v90", 29), TMV("v91", 30), TMV("v92", 30),
   TMV("v93", 30), TMV("v94", 30), TMV("v95", 27), TMV("v96", 27),
   TMV("v97", 27), TMV("v98", 27), TMV("v99", 27), TMV("xs", 13),
   TMV("xs", 19), TMC(16, 33), TMC(16, 35), TMC(16, 37), TMC(16, 39),
   TMC(16, 41), TMC(16, 43), TMC(16, 45), TMC(16, 47), TMC(16, 44),
   TMC(16, 46), TMC(16, 49), TMC(16, 51), TMC(16, 53), TMC(16, 55),
   TMC(16, 57), TMC(17, 59), TMC(18, 61), TMC(18, 63), TMC(18, 65),
   TMC(18, 25), TMC(18, 66), TMC(18, 67), TMC(19, 59), TMC(20, 69),
   TMC(20, 71), TMC(21, 73), TMC(22, 15), TMC(23, 15), TMC(24, 75),
   TMC(24, 76), TMC(24, 78), TMC(25, 79), TMC(26, 12), TMC(27, 112),
   TMC(28, 113), TMC(28, 114), TMC(29, 15), TMC(30, 15), TMC(31, 7),
   TMC(31, 13), TMC(31, 19), TMC(32, 5), TMC(33, 115), TMC(34, 116),
   TMC(35, 2), TMC(36, 117), TMC(37, 15), TMC(38, 2), TMC(39, 122),
   TMC(40, 123), TMC(41, 124), TMC(42, 12), TMC(43, 68), TMC(43, 70),
   TMC(44, 127), TMC(44, 130), TMC(45, 132), TMC(46, 137), TMC(46, 142),
   TMC(47, 18), TMC(48, 18), TMC(49, 18), TMC(50, 144), TMC(50, 145),
   TMC(51, 18), TMC(52, 147), TMC(53, 149), TMC(54, 132), TMC(55, 147),
   TMC(56, 151), TMC(57, 149), TMC(58, 21), TMC(59, 20), TMC(60, 132),
   TMC(61, 18), TMC(62, 8), TMC(63, 155), TMC(63, 159), TMC(64, 151),
   TMC(65, 151), TMC(66, 161), TMC(67, 18), TMC(68, 131), TMC(69, 165),
   TMC(69, 169), TMC(70, 132), TMC(71, 170), TMC(71, 171), TMC(72, 161),
   TMC(73, 172), TMC(74, 145), TMC(75, 17), TMC(76, 16), TMC(77, 9),
   TMC(78, 176), TMC(78, 180), TMC(79, 182), TMC(80, 8), TMC(81, 8),
   TMC(82, 8), TMC(83, 8), TMC(84, 8), TMC(85, 184)]
  end
  structure ThmBind = struct
    val DT = Thm.disk_thm
    val read = Term.read_raw tmvector
  end
  fun op getPlCom_primitive_def x = x
    val op getPlCom_primitive_def =
    ThmBind.DT(((("PBIntegratedDef",0),[]),[]),
               [ThmBind.read"%187%242@%225%194%3%185%223$0@2%185%179%169$1$0@%200%211@$0@2|@2%185%175%99%179%169$2$0@%200%220%201$1@3$0@2|@|@2%181%157%179%169$2$0@%200%220%219%213$1@4$0@2|@|@4|@2%9%5%247$0@%205%244@2%13%169%254$1@%205$3$0@3%87%228$0@%122%205$5$2@2|@%134%265$0@%7%205$0@|@%26%205$6$3@2|@|@|@||@||@2"])
  fun op secHelper_def x = x
    val op secHelper_def =
    ThmBind.DT(((("PBIntegratedDef",3),[]),[]),
               [ThmBind.read"%181%6%188%263$0@2%198%232%212%214@2%256%220%219%213$0@6%208@2|@"])
  fun op getOmniCommand_primitive_def x = x
    val op getOmniCommand_primitive_def =
    ThmBind.DT(((("PBIntegratedDef",4),[]),[]),
               [ThmBind.read"%186%241@%224%193%2%185%222$0@2%185%178%168$1$0@%199%221@$0@2|@2%185%178%168$1$0@%199%202@$0@2|@2%185%182%75%178%168$2$0@%199%257$1@2$0@2|@|@2%185%170%86%178%168$2$0@%199%252$1@2$0@2|@|@2%185%170%110%170%98%178%168$3$0@%199%226$1@$2@2$0@2|@|@|@2%185%170%133%170%121%178%168$3$0@%199%255$1@$2@2$0@2|@|@|@2%185%170%156%170%145%178%168$3$0@%199%243$1@$2@2$0@2|@|@|@2%185%170%25%170%14%178%168$3$0@%199%237$1@$2@2$0@2|@|@|@2%185%172%37%178%168$2$0@%199%260$1@%221@2$0@2|@|@2%185%172%37%178%168$2$0@%199%260$1@%202@2$0@2|@|@2%185%184%52%178%168$2$0@%199%260%212$1@2%257%211@3$0@2|@|@2%185%174%63%178%168$2$0@%199%260%212%217@2%257%220$1@4$0@2|@|@2%185%175%65%178%168$2$0@%199%260%212%214@2%257%220%201$1@5$0@2|@|@2%185%183%69%178%168$2$0@%199%260%212%214@2%257%220%219%215$1@6$0@2|@|@2%185%182%131%172%54%172%53%178%168$4$0@%199%260%250$1@$2@2%257$3@3$0@2|@|@|@|@2%185%182%131%172%56%172%55%178%168$4$0@%199%260%258$1@$2@2%257$3@3$0@2|@|@|@|@2%185%170%132%172%37%178%168$3$0@%199%260$1@%252$2@3$0@2|@|@|@2%185%170%136%170%135%172%37%178%168$4$0@%199%260$1@%226$2@$3@3$0@2|@|@|@|@2%185%170%138%170%137%172%37%178%168$4$0@%199%260$1@%255$2@$3@3$0@2|@|@|@|@2%185%170%140%170%139%172%37%178%168$4$0@%199%260$1@%243$2@$3@3$0@2|@|@|@|@2%185%170%142%170%141%172%37%178%168$4$0@%199%260$1@%237$2@$3@3$0@2|@|@|@|@2%185%170%144%172%143%172%37%178%168$4$0@%199%260$1@%260$2@$3@3$0@2|@|@|@|@2%185%172%147%172%146%172%37%178%168$4$0@%199%260$1@%266$2@$3@3$0@2|@|@|@|@2%185%170%149%172%148%172%37%178%168$4$0@%199%260$1@%233$2@$3@3$0@2|@|@|@|@2%185%170%152%172%151%172%150%172%37%178%168$5$0@%199%260$1@%259$2@$3@$4@3$0@2|@|@|@|@|@2%185%171%154%171%153%172%37%178%168$4$0@%199%260$1@%235$2@$3@3$0@2|@|@|@|@2%185%171%158%171%155%172%37%178%168$4$0@%199%260$1@%238$2@$3@3$0@2|@|@|@|@2%185%173%160%173%159%172%37%178%168$4$0@%199%260$1@%236$2@$3@3$0@2|@|@|@|@2%185%173%162%173%161%172%37%178%168$4$0@%199%260$1@%240$2@$3@3$0@2|@|@|@|@2%185%180%164%180%163%172%37%178%168$4$0@%199%260$1@%239$2@$3@3$0@2|@|@|@|@2%185%180%166%180%165%172%37%178%168$4$0@%199%260$1@%249$2@$3@3$0@2|@|@|@|@2%185%180%15%180%167%172%37%178%168$4$0@%199%260$1@%248$2@$3@3$0@2|@|@|@|@2%185%172%68%172%58%178%168$3$0@%199%266$1@$2@2$0@2|@|@|@2%185%170%72%172%71%178%168$3$0@%199%233$1@$2@2$0@2|@|@|@2%185%170%76%172%74%172%73%178%168$4$0@%199%259$1@$2@$3@2$0@2|@|@|@|@2%185%171%78%171%77%178%168$3$0@%199%235$1@$2@2$0@2|@|@|@2%185%171%80%171%79%178%168$3$0@%199%238$1@$2@2$0@2|@|@|@2%185%173%82%173%81%178%168$3$0@%199%236$1@$2@2$0@2|@|@|@2%185%173%84%173%83%178%168$3$0@%199%240$1@$2@2$0@2|@|@|@2%185%180%88%180%85%178%168$3$0@%199%239$1@$2@2$0@2|@|@|@2%185%180%90%180%89%178%168$3$0@%199%249$1@$2@2$0@2|@|@|@2%180%92%180%91%178%168$3$0@%199%248$1@$2@2$0@2|@|@|@43|@2%8%4%246$0@%204%245@2%10%168%203$1@%204$3$0@3%204$3$0@3%93%204$4$1@2|@%94%204$4$1@2|@%95%96%204$5$2@2||@%97%100%204$5$2@2||@%101%102%204$5$2@2||@%103%104%204$5$2@2||@%105%106%203$0@%204$5$2@3%204$5$2@3%16%218$2@%57%253$1@%204$7$4@3%64%272$1@%204$8$5@3%227$0@%66%204$9$6@2|@%67%264$0@%70%204$10$7@2|@%6%204$0@|@|@2|@|@%59%60%204$8$5@2||@%61%62%204$8$5@2||@|@%17%204$6$3@2|@%18%19%204$7$4@2||@%20%21%204$7$4@2||@%22%23%204$7$4@2||@%24%27%204$7$4@2||@%28%29%204$7$4@2||@%30%31%204$7$4@2||@%32%33%204$7$4@2||@%34%35%36%204$8$5@2|||@%38%39%204$7$4@2||@%40%41%204$7$4@2||@%42%43%204$7$4@2||@%44%45%204$7$4@2||@%46%47%204$7$4@2||@%48%49%204$7$4@2||@%50%51%204$7$4@2||@||@%107%108%204$5$2@2||@%109%111%204$5$2@2||@%112%113%114%204$6$3@2|||@%115%116%204$5$2@2||@%117%118%204$5$2@2||@%119%120%204$5$2@2||@%123%124%204$5$2@2||@%125%126%204$5$2@2||@%127%128%204$5$2@2||@%129%130%204$5$2@2||@||@||@2"])
  fun op secAuthorization_def x = x
    val op secAuthorization_def =
    ThmBind.DT(((("PBIntegratedDef",7),[]),[]),
               [ThmBind.read"%178%168%188%261$0@2%263%241$0@3|@"])
  fun op secContext_def x = x
    val op secContext_def =
    ThmBind.DT(((("PBIntegratedDef",8),
                [("PBTypeIntegrated",[118])]),["DISK_THM"]),
               [ThmBind.read"%185%178%168%189%262%216@$0@2%195%190%241$0@2%271@2%199%243%257%220%219%213%271@5%233%212%217@2%257%220%219%215%234@7%209@2%199%257%211@2%209@3|@2%185%178%168%189%262%206@$0@2%195%190%241$0@2%269@2%199%243%257%220%219%213%269@5%233%212%217@2%257%220%219%215%230@7%209@2%199%257%211@2%209@3|@2%185%178%168%189%262%196@$0@2%195%190%241$0@2%267@2%199%243%257%220%219%213%267@5%233%212%217@2%257%220%219%215%251@7%209@2%199%257%211@2%209@3|@2%185%178%168%189%262%207@$0@2%195%190%241$0@2%267@2%199%243%257%220%219%213%270@5%233%212%217@2%257%220%219%215%231@7%209@2%199%257%211@2%209@3|@2%178%168%189%262%197@$0@2%195%190%241$0@2%268@2%199%243%257%220%219%213%268@5%233%212%217@2%257%220%219%215%229@7%209@2%199%257%211@2%209@3|@5"])
  fun op getPlCom_ind x = x
    val op getPlCom_ind =
    ThmBind.DT(((("PBIntegratedDef",1),
                [("OMNIType",[15,32,37]),("PBTypeIntegrated",[44,61,66]),
                 ("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("basicSize",[4]),
                 ("bool",
                 [25,26,35,46,47,50,51,52,53,57,62,71,76,77,79,92,95,103,
                  104,106]),("list",[7,46]),("numeral",[0,3,5,7,8]),
                 ("option",[6]),("prim_rec",[42]),
                 ("relation",[107,119,121]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%177%1%192%185$0%210@2%185%183%7%179%169$2%200%220%219%215$1@4$0@2|@|@2%185%179%169%192$1$0@2$1%200%211@$0@3|@2%185%175%99%179%169%192$2$0@2$2%200%220%201$1@3$0@3|@|@2%181%157%179%169%192$2$0@2$2%200%220%219%213$1@4$0@3|@|@6%179%12$1$0@|@2|@"])
  fun op getPlCom_def x = x
    val op getPlCom_def =
    ThmBind.DT(((("PBIntegratedDef",2),
                [("OMNIType",[15,31,32]),("PBIntegratedDef",[0]),
                 ("PBTypeIntegrated",[44,60,61]),
                 ("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("basicSize",[4]),
                 ("bool",[15,25,35,50,51,53,62,92,95,103,104,106]),
                 ("combin",[19]),("list",[6,7]),("numeral",[0,3,5,7,8]),
                 ("option",[7]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%185%191%242%210@2%244@2%185%179%169%183%7%191%242%200%220%219%215$0@4$1@3$0@|@|@2%185%179%169%191%242%200%211@$0@3%242$0@2|@2%185%179%169%175%99%191%242%200%220%201$0@3$1@3%242$1@2|@|@2%179%169%181%157%191%242%200%220%219%213$0@4$1@3%242$1@2|@|@5"])
  fun op getOmniCommand_ind x = x
    val op getOmniCommand_ind =
    ThmBind.DT(((("PBIntegratedDef",5),
                [("OMNIType",[15,32,37]),
                 ("PBTypeIntegrated",[17,61,66,84,90]),
                 ("aclfoundation",[34,55,111,116]),
                 ("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("basicSize",[4]),
                 ("bool",
                 [25,26,35,46,47,50,51,52,53,57,62,71,75,76,77,79,92,95,
                  103,104,106]),("list",[7,46]),("numeral",[0,3,5,7,8]),
                 ("option",[6]),("prim_rec",[42]),
                 ("relation",[107,119,121]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%176%0%192%185$0%209@2%185%181%6%178%168$2%199%260%212%214@2%257%220%219%213$1@6$0@2|@|@2%185%178%168%192$1$0@2$1%199%221@$0@3|@2%185%178%168%192$1$0@2$1%199%202@$0@3|@2%185%182%75%178%168%192$2$0@2$2%199%257$1@2$0@3|@|@2%185%170%86%178%168%192$2$0@2$2%199%252$1@2$0@3|@|@2%185%170%98%170%110%178%168%192$3$0@2$3%199%226$2@$1@2$0@3|@|@|@2%185%170%121%170%133%178%168%192$3$0@2$3%199%255$2@$1@2$0@3|@|@|@2%185%170%145%170%156%178%168%192$3$0@2$3%199%243$2@$1@2$0@3|@|@|@2%185%170%14%170%25%178%168%192$3$0@2$3%199%237$2@$1@2$0@3|@|@|@2%185%172%37%178%168%192$2$0@2$2%199%260$1@%221@2$0@3|@|@2%185%172%37%178%168%192$2$0@2$2%199%260$1@%202@2$0@3|@|@2%185%184%52%178%168%192$2$0@2$2%199%260%212$1@2%257%211@3$0@3|@|@2%185%174%63%178%168%192$2$0@2$2%199%260%212%217@2%257%220$1@4$0@3|@|@2%185%175%65%178%168%192$2$0@2$2%199%260%212%214@2%257%220%201$1@5$0@3|@|@2%185%183%69%178%168%192$2$0@2$2%199%260%212%214@2%257%220%219%215$1@6$0@3|@|@2%185%172%53%172%54%182%131%178%168%192$4$0@2$4%199%260%250$3@$2@2%257$1@3$0@3|@|@|@|@2%185%172%55%172%56%182%131%178%168%192$4$0@2$4%199%260%258$3@$2@2%257$1@3$0@3|@|@|@|@2%185%172%37%170%132%178%168%192$3$0@2$3%199%260$2@%252$1@3$0@3|@|@|@2%185%172%37%170%135%170%136%178%168%192$4$0@2$4%199%260$3@%226$2@$1@3$0@3|@|@|@|@2%185%172%37%170%137%170%138%178%168%192$4$0@2$4%199%260$3@%255$2@$1@3$0@3|@|@|@|@2%185%172%37%170%139%170%140%178%168%192$4$0@2$4%199%260$3@%243$2@$1@3$0@3|@|@|@|@2%185%172%37%170%141%170%142%178%168%192$4$0@2$4%199%260$3@%237$2@$1@3$0@3|@|@|@|@2%185%172%37%172%143%170%144%178%168%192$4$0@2$4%199%260$3@%260$2@$1@3$0@3|@|@|@|@2%185%172%37%172%146%172%147%178%168%192$4$0@2$4%199%260$3@%266$2@$1@3$0@3|@|@|@|@2%185%172%37%172%148%170%149%178%168%192$4$0@2$4%199%260$3@%233$2@$1@3$0@3|@|@|@|@2%185%172%37%172%150%172%151%170%152%178%168%192$5$0@2$5%199%260$4@%259$3@$2@$1@3$0@3|@|@|@|@|@2%185%172%37%171%153%171%154%178%168%192$4$0@2$4%199%260$3@%235$2@$1@3$0@3|@|@|@|@2%185%172%37%171%155%171%158%178%168%192$4$0@2$4%199%260$3@%238$2@$1@3$0@3|@|@|@|@2%185%172%37%173%159%173%160%178%168%192$4$0@2$4%199%260$3@%236$2@$1@3$0@3|@|@|@|@2%185%172%37%173%161%173%162%178%168%192$4$0@2$4%199%260$3@%240$2@$1@3$0@3|@|@|@|@2%185%172%37%180%163%180%164%178%168%192$4$0@2$4%199%260$3@%239$2@$1@3$0@3|@|@|@|@2%185%172%37%180%165%180%166%178%168%192$4$0@2$4%199%260$3@%249$2@$1@3$0@3|@|@|@|@2%185%172%37%180%167%180%15%178%168%192$4$0@2$4%199%260$3@%248$2@$1@3$0@3|@|@|@|@2%185%172%58%172%68%178%168%192$3$0@2$3%199%266$2@$1@2$0@3|@|@|@2%185%172%71%170%72%178%168%192$3$0@2$3%199%233$2@$1@2$0@3|@|@|@2%185%172%73%172%74%170%76%178%168%192$4$0@2$4%199%259$3@$2@$1@2$0@3|@|@|@|@2%185%171%77%171%78%178%168%192$3$0@2$3%199%235$2@$1@2$0@3|@|@|@2%185%171%79%171%80%178%168%192$3$0@2$3%199%238$2@$1@2$0@3|@|@|@2%185%173%81%173%82%178%168%192$3$0@2$3%199%236$2@$1@2$0@3|@|@|@2%185%173%83%173%84%178%168%192$3$0@2$3%199%240$2@$1@2$0@3|@|@|@2%185%180%85%180%88%178%168%192$3$0@2$3%199%239$2@$1@2$0@3|@|@|@2%185%180%89%180%90%178%168%192$3$0@2$3%199%249$2@$1@2$0@3|@|@|@2%180%91%180%92%178%168%192$3$0@2$3%199%248$2@$1@2$0@3|@|@|@45%178%11$1$0@|@2|@"])
  fun op getOmniCommand_def x = x
    val op getOmniCommand_def =
    ThmBind.DT(((("PBIntegratedDef",6),
                [("OMNIType",[15,31,32]),("PBIntegratedDef",[4]),
                 ("PBTypeIntegrated",[17,60,61,84,86]),
                 ("aclfoundation",[33,34,110,111]),
                 ("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("basicSize",[4]),
                 ("bool",[15,25,35,50,51,53,57,62,92,95,103,104,106]),
                 ("combin",[19]),("list",[6,7]),("numeral",[0,3,5,7,8]),
                 ("option",[7]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%185%190%241%209@2%245@2%185%178%168%181%6%190%241%199%260%212%214@2%257%220%219%213$0@6$1@3$0@|@|@2%185%178%168%190%241%199%221@$0@3%241$0@2|@2%185%178%168%190%241%199%202@$0@3%241$0@2|@2%185%178%168%182%75%190%241%199%257$0@2$1@3%241$1@2|@|@2%185%178%168%170%86%190%241%199%252$0@2$1@3%241$1@2|@|@2%185%178%168%170%110%170%98%190%241%199%226$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%170%133%170%121%190%241%199%255$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%170%156%170%145%190%241%199%243$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%170%25%170%14%190%241%199%237$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%172%37%190%241%199%260$0@%221@2$1@3%241$1@2|@|@2%185%178%168%172%37%190%241%199%260$0@%202@2$1@3%241$1@2|@|@2%185%178%168%184%52%190%241%199%260%212$0@2%257%211@3$1@3%241$1@2|@|@2%185%178%168%174%63%190%241%199%260%212%217@2%257%220$0@4$1@3%241$1@2|@|@2%185%178%168%175%65%190%241%199%260%212%214@2%257%220%201$0@5$1@3%241$1@2|@|@2%185%178%168%183%69%190%241%199%260%212%214@2%257%220%219%215$0@6$1@3%241$1@2|@|@2%185%178%168%182%131%172%54%172%53%190%241%199%260%250$0@$1@2%257$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%182%131%172%56%172%55%190%241%199%260%258$0@$1@2%257$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%132%172%37%190%241%199%260$0@%252$1@3$2@3%241$2@2|@|@|@2%185%178%168%170%136%170%135%172%37%190%241%199%260$0@%226$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%138%170%137%172%37%190%241%199%260$0@%255$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%140%170%139%172%37%190%241%199%260$0@%243$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%142%170%141%172%37%190%241%199%260$0@%237$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%144%172%143%172%37%190%241%199%260$0@%260$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%172%147%172%146%172%37%190%241%199%260$0@%266$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%149%172%148%172%37%190%241%199%260$0@%233$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%170%152%172%151%172%150%172%37%190%241%199%260$0@%259$1@$2@$3@3$4@3%241$4@2|@|@|@|@|@2%185%178%168%171%154%171%153%172%37%190%241%199%260$0@%235$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%171%158%171%155%172%37%190%241%199%260$0@%238$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%173%160%173%159%172%37%190%241%199%260$0@%236$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%173%162%173%161%172%37%190%241%199%260$0@%240$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%180%164%180%163%172%37%190%241%199%260$0@%239$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%180%166%180%165%172%37%190%241%199%260$0@%249$1@$2@3$3@3%241$3@2|@|@|@|@2%185%178%168%180%167%172%37%180%15%190%241%199%260$1@%248$2@$0@3$3@3%241$3@2|@|@|@|@2%185%178%168%172%68%172%58%190%241%199%266$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%170%72%172%71%190%241%199%233$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%170%76%172%74%172%73%190%241%199%259$0@$1@$2@2$3@3%241$3@2|@|@|@|@2%185%178%168%171%78%171%77%190%241%199%235$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%171%80%171%79%190%241%199%238$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%173%82%173%81%190%241%199%236$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%173%84%173%83%190%241%199%240$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%180%88%180%85%190%241%199%239$0@$1@2$2@3%241$2@2|@|@|@2%185%178%168%180%90%180%89%190%241%199%249$0@$1@2$2@3%241$2@2|@|@|@2%178%168%180%92%180%91%190%241%199%248$0@$1@2$2@3%241$2@2|@|@|@44"])

  val _ = DB.bindl "PBIntegratedDef"
  [("getPlCom_primitive_def",getPlCom_primitive_def,DB.Def),
   ("secHelper_def",secHelper_def,DB.Def),
   ("getOmniCommand_primitive_def",getOmniCommand_primitive_def,DB.Def),
   ("secAuthorization_def",secAuthorization_def,DB.Def),
   ("secContext_def",secContext_def,DB.Def),
   ("getPlCom_ind",getPlCom_ind,DB.Thm),
   ("getPlCom_def",getPlCom_def,DB.Thm),
   ("getOmniCommand_ind",getOmniCommand_ind,DB.Thm),
   ("getOmniCommand_def",getOmniCommand_def,DB.Thm)]

  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "PBIntegratedDef",
    thydataty = "compute",
    read = ThmBind.read,
    data =
        "PBIntegratedDef.getPlCom_def PBIntegratedDef.secAuthorization_def PBIntegratedDef.secContext_def PBIntegratedDef.secHelper_def PBIntegratedDef.getOmniCommand_def"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "PBIntegratedDef",
    thydataty = "TermGrammarDeltas",
    read = ThmBind.read,
    data =
        "OO8.getPlCom4.%242OO9.secHelper4.%263OO14.getOmniCommand4.%241OO16.secAuthorization4.%261OO10.secContext4.%262"
  }
  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val PBIntegratedDef_grammars = merge_grammars ["PBTypeIntegrated",
                                                 "aclfoundation"]
  local
  val (tyUDs, tmUDs) = GrammarDeltas.thy_deltas{thyname="PBIntegratedDef"}
  val addtmUDs = term_grammar.add_deltas tmUDs
  val addtyUDs = type_grammar.apply_deltas tyUDs
  in
  val PBIntegratedDef_grammars = 
    Portable.## (addtyUDs,addtmUDs) PBIntegratedDef_grammars
  val _ = Parse.grammarDB_insert("PBIntegratedDef",PBIntegratedDef_grammars)
  val _ = Parse.temp_set_grammars (addtyUDs (Parse.type_grammar()), addtmUDs (Parse.term_grammar()))
  end (* addUDs local *)
  end

val _ = if !Globals.print_thy_loads then TextIO.print "done\n" else ()
val _ = Theory.load_complete "PBIntegratedDef"
end
