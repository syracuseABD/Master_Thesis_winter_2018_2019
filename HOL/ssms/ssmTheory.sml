structure ssmTheory :> ssmTheory =
struct
  val _ = if !Globals.print_thy_loads then TextIO.print "Loading ssmTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (* Parents and ML dependencies *)
  local open satListTheory
  in end;
  val _ = Theory.link_parents
          ("ssm",Arbnum.fromString "1528688695",Arbnum.fromString "391911")
          [("satList",
           Arbnum.fromString "1528688691",
           Arbnum.fromString "225396")];
  val _ = Theory.incorporate_types "ssm"
       [("trType", 1), ("configuration", 6)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("ssm", "trType"), ID("num", "num"),
   ID("list", "list"), ID("aclfoundation", "Form"), ID("option", "option"),
   ID("ssm", "configuration"), ID("min", "bool"), ID("pair", "prod"),
   ID("aclfoundation", "po"), ID("aclfoundation", "Kripke"),
   ID("ind_type", "recspace"), ID("aclfoundation", "Princ"),
   ID("aclfoundation", "IntLevel"), ID("aclfoundation", "SecLevel"),
   ID("bool", "!"), ID("arithmetic", "+"), ID("pair", ","),
   ID("bool", "/\\"), ID("num", "0"), ID("min", "="), ID("min", "==>"),
   ID("bool", "?"), ID("min", "@"), ID("bool", "ARB"),
   ID("arithmetic", "BIT1"), ID("ind_type", "BOTTOM"), ID("ssm", "CFG"),
   ID("ssm", "CFGInterpret"), ID("list", "CONS"), ID("ind_type", "CONSTR"),
   ID("bool", "DATATYPE"), ID("aclfoundation", "FF"), ID("list", "FOLDR"),
   ID("aclfoundation", "Form_CASE"), ID("aclfoundation", "Form_size"),
   ID("combin", "I"), ID("list", "MAP"), ID("list", "NIL"),
   ID("option", "NONE"), ID("arithmetic", "NUMERAL"), ID("option", "SOME"),
   ID("num", "SUC"), ID("bool", "T"), ID("ssm", "TR"),
   ID("aclfoundation", "TT"), ID("bool", "TYPE_DEFINITION"),
   ID("relation", "WF"), ID("relation", "WFREC"), ID("arithmetic", "ZERO"),
   ID("bool", "\\/"), ID("aclfoundation", "andf"),
   ID("ssm", "authenticationTest"), ID("ssm", "commandList"),
   ID("ssm", "configuration_CASE"), ID("ssm", "configuration_size"),
   ID("aclfoundation", "controls"), ID("ssm", "discard"),
   ID("aclfoundation", "domi"), ID("aclfoundation", "doms"),
   ID("aclfoundation", "eqf"), ID("aclfoundation", "eqi"),
   ID("aclfoundation", "eqn"), ID("aclfoundation", "eqs"),
   ID("ssm", "exec"), ID("ssm", "extractCommand"),
   ID("ssm", "extractInput"), ID("ssm", "extractPropCommand"),
   ID("aclfoundation", "impf"), ID("ssm", "inputList"),
   ID("list", "list_size"), ID("aclfoundation", "lt"),
   ID("aclfoundation", "lte"), ID("aclfoundation", "notf"),
   ID("option", "option_CASE"), ID("basicSize", "option_size"),
   ID("aclfoundation", "orf"), ID("aclfoundation", "prop"),
   ID("ssm", "propCommandList"), ID("aclfoundation", "reps"),
   ID("aclrules", "sat"), ID("satList", "satList"),
   ID("aclfoundation", "says"), ID("aclfoundation", "speaks_for"),
   ID("ssm", "trType_CASE"), ID("ssm", "trType_size"), ID("ssm", "trap"),
   ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'cmdlist", TYOP [1, 0], TYOP [0, 0, 1], TYOP [2], TYOP [0, 1, 3],
   TYOP [0, 0, 3], TYOP [0, 5, 4], TYV "'a", TYOP [0, 0, 7],
   TYOP [0, 8, 7], TYOP [0, 8, 9], TYOP [0, 8, 10], TYOP [0, 1, 11],
   TYV "'e", TYV "'d", TYV "'principal", TYV "'command", TYOP [5, 16],
   TYOP [4, 17, 15, 14, 13], TYOP [3, 18], TYOP [0, 19, 19], TYOP [3, 17],
   TYOP [0, 19, 21], TYOP [0, 18, 18], TYOP [0, 18, 17], TYOP [0, 18, 16],
   TYV "'state", TYV "'output", TYOP [6, 16, 14, 13, 27, 15, 26],
   TYOP [0, 28, 3], TYOP [0, 26, 3], TYOP [0, 30, 29], TYOP [0, 15, 3],
   TYOP [0, 32, 31], TYOP [0, 27, 3], TYOP [0, 34, 33], TYOP [0, 13, 3],
   TYOP [0, 36, 35], TYOP [0, 14, 3], TYOP [0, 38, 37], TYOP [0, 16, 3],
   TYOP [0, 40, 39], TYOP [3, 27], TYOP [0, 42, 7], TYOP [0, 26, 43],
   TYOP [3, 19], TYOP [0, 45, 44], TYOP [0, 20, 46], TYOP [0, 26, 20],
   TYOP [0, 48, 47], TYOP [7], TYOP [0, 18, 50], TYOP [0, 51, 49],
   TYOP [0, 52, 7], TYOP [0, 28, 53], TYOP [3, 16], TYOP [0, 19, 55],
   TYOP [0, 19, 50], TYOP [0, 51, 57], TYOP [0, 28, 50], TYOP [0, 28, 59],
   TYOP [1, 21], TYOP [0, 61, 60], TYOP [9, 13], TYOP [9, 14],
   TYOP [8, 64, 63], TYV "'b", TYOP [10, 17, 66, 15, 14, 13],
   TYOP [8, 67, 65], TYOP [0, 68, 62], TYOP [0, 68, 59], TYOP [0, 42, 28],
   TYOP [0, 26, 71], TYOP [0, 45, 72], TYOP [0, 20, 73], TYOP [0, 48, 74],
   TYOP [0, 51, 75], TYOP [8, 26, 42], TYOP [8, 45, 77], TYOP [8, 20, 78],
   TYOP [8, 48, 79], TYOP [8, 51, 80], TYOP [11, 81], TYOP [0, 82, 50],
   TYOP [11, 0], TYOP [0, 84, 50], TYOP [0, 61, 26], TYOP [0, 26, 86],
   TYOP [0, 61, 27], TYOP [0, 26, 88], TYOP [12, 15], TYOP [0, 1, 50],
   TYOP [0, 18, 51], TYOP [0, 76, 50], TYOP [0, 28, 7], TYOP [0, 1, 7],
   TYOP [0, 28, 82], TYOP [0, 1, 84], TYOP [0, 2, 50], TYOP [0, 2, 98],
   TYOP [0, 2, 99], TYOP [13, 15, 14], TYOP [14, 15, 13], TYOP [0, 0, 50],
   TYOP [0, 103, 50], TYOP [0, 16, 50], TYOP [0, 105, 50],
   TYOP [0, 26, 50], TYOP [0, 107, 50], TYOP [0, 51, 50],
   TYOP [0, 101, 50], TYOP [0, 110, 50], TYOP [0, 67, 50],
   TYOP [0, 112, 50], TYOP [0, 90, 50], TYOP [0, 114, 50],
   TYOP [0, 102, 50], TYOP [0, 116, 50], TYOP [0, 59, 50], TYOP [0, 8, 50],
   TYOP [0, 119, 50], TYOP [0, 5, 50], TYOP [0, 121, 50], TYOP [0, 40, 50],
   TYOP [0, 123, 50], TYOP [0, 38, 50], TYOP [0, 125, 50],
   TYOP [0, 36, 50], TYOP [0, 127, 50], TYOP [0, 34, 50],
   TYOP [0, 129, 50], TYOP [0, 32, 50], TYOP [0, 131, 50],
   TYOP [0, 48, 50], TYOP [0, 133, 50], TYOP [0, 89, 50],
   TYOP [0, 135, 50], TYOP [0, 87, 50], TYOP [0, 137, 50],
   TYOP [0, 30, 50], TYOP [0, 139, 50], TYOP [0, 109, 50],
   TYOP [0, 118, 50], TYOP [0, 52, 50], TYOP [0, 143, 50],
   TYOP [0, 20, 50], TYOP [0, 145, 50], TYOP [0, 70, 50],
   TYOP [0, 147, 50], TYOP [0, 69, 50], TYOP [0, 149, 50],
   TYOP [0, 85, 50], TYOP [0, 151, 50], TYOP [0, 83, 50],
   TYOP [0, 153, 50], TYOP [0, 91, 50], TYOP [0, 155, 50],
   TYOP [0, 42, 50], TYOP [0, 157, 50], TYOP [0, 57, 50], TYOP [0, 45, 50],
   TYOP [0, 160, 50], TYOP [0, 3, 50], TYOP [0, 162, 50], TYOP [0, 17, 50],
   TYOP [0, 164, 50], TYOP [0, 64, 50], TYOP [0, 166, 50],
   TYOP [0, 63, 50], TYOP [0, 168, 50], TYOP [0, 68, 50],
   TYOP [0, 170, 50], TYOP [0, 61, 50], TYOP [0, 172, 50], TYOP [0, 3, 3],
   TYOP [0, 3, 174], TYOP [0, 42, 77], TYOP [0, 26, 176], TYOP [0, 65, 68],
   TYOP [0, 67, 178], TYOP [0, 79, 80], TYOP [0, 48, 180],
   TYOP [0, 80, 81], TYOP [0, 51, 182], TYOP [0, 78, 79],
   TYOP [0, 20, 184], TYOP [0, 77, 78], TYOP [0, 45, 186],
   TYOP [0, 63, 65], TYOP [0, 64, 188], TYOP [0, 50, 50],
   TYOP [0, 50, 190], TYOP [0, 7, 50], TYOP [0, 7, 192], TYOP [0, 0, 103],
   TYOP [0, 16, 105], TYOP [0, 26, 107], TYOP [0, 48, 133],
   TYOP [0, 25, 50], TYOP [0, 25, 198], TYOP [0, 23, 50],
   TYOP [0, 23, 200], TYOP [0, 51, 109], TYOP [0, 24, 50],
   TYOP [0, 24, 203], TYOP [0, 20, 145], TYOP [0, 69, 149],
   TYOP [0, 55, 50], TYOP [0, 55, 207], TYOP [0, 42, 157],
   TYOP [0, 19, 57], TYOP [0, 45, 160], TYOP [0, 21, 50],
   TYOP [0, 21, 212], TYOP [0, 3, 162], TYOP [0, 17, 164],
   TYOP [0, 68, 170], TYOP [0, 84, 85], TYOP [0, 82, 83], TYOP [0, 1, 91],
   TYOP [0, 61, 172], TYOP [0, 94, 50], TYOP [0, 221, 50],
   TYOP [0, 96, 50], TYOP [0, 223, 50], TYOP [0, 95, 50],
   TYOP [0, 225, 50], TYOP [0, 97, 50], TYOP [0, 227, 50],
   TYOP [0, 92, 50], TYOP [0, 229, 92], TYOP [0, 42, 42],
   TYOP [0, 27, 231], TYOP [0, 45, 45], TYOP [0, 19, 233], TYOP [0, 3, 84],
   TYOP [0, 235, 84], TYOP [0, 0, 236], TYOP [0, 3, 237], TYOP [0, 3, 82],
   TYOP [0, 239, 82], TYOP [0, 81, 240], TYOP [0, 3, 241], TYOP [3, 50],
   TYOP [0, 243, 50], TYOP [0, 50, 244], TYOP [0, 191, 245],
   TYOP [0, 3, 16], TYOP [0, 3, 247], TYOP [0, 248, 16],
   TYOP [0, 248, 249], TYOP [0, 248, 250], TYOP [0, 102, 16],
   TYOP [0, 102, 252], TYOP [0, 253, 251], TYOP [0, 253, 254],
   TYOP [0, 101, 16], TYOP [0, 101, 256], TYOP [0, 257, 255],
   TYOP [0, 257, 258], TYOP [0, 90, 25], TYOP [0, 90, 260],
   TYOP [0, 261, 259], TYOP [0, 260, 262], TYOP [0, 90, 16],
   TYOP [0, 90, 264], TYOP [0, 265, 263], TYOP [0, 260, 266],
   TYOP [0, 18, 25], TYOP [0, 268, 267], TYOP [0, 268, 269],
   TYOP [0, 268, 270], TYOP [0, 268, 271], TYOP [0, 25, 272],
   TYOP [0, 17, 16], TYOP [0, 274, 273], TYOP [0, 16, 275],
   TYOP [0, 16, 276], TYOP [0, 18, 277], TYOP [0, 3, 18], TYOP [0, 3, 279],
   TYOP [0, 280, 18], TYOP [0, 280, 281], TYOP [0, 280, 282],
   TYOP [0, 102, 18], TYOP [0, 102, 284], TYOP [0, 285, 283],
   TYOP [0, 285, 286], TYOP [0, 101, 18], TYOP [0, 101, 288],
   TYOP [0, 289, 287], TYOP [0, 289, 290], TYOP [0, 90, 23],
   TYOP [0, 90, 292], TYOP [0, 293, 291], TYOP [0, 292, 294],
   TYOP [0, 90, 18], TYOP [0, 90, 296], TYOP [0, 297, 295],
   TYOP [0, 292, 298], TYOP [0, 18, 23], TYOP [0, 300, 299],
   TYOP [0, 300, 301], TYOP [0, 300, 302], TYOP [0, 300, 303],
   TYOP [0, 23, 304], TYOP [0, 17, 18], TYOP [0, 306, 305],
   TYOP [0, 18, 307], TYOP [0, 18, 308], TYOP [0, 18, 309],
   TYOP [0, 3, 17], TYOP [0, 3, 311], TYOP [0, 312, 17],
   TYOP [0, 312, 313], TYOP [0, 312, 314], TYOP [0, 102, 17],
   TYOP [0, 102, 316], TYOP [0, 317, 315], TYOP [0, 317, 318],
   TYOP [0, 101, 17], TYOP [0, 101, 320], TYOP [0, 321, 319],
   TYOP [0, 321, 322], TYOP [0, 90, 24], TYOP [0, 90, 324],
   TYOP [0, 325, 323], TYOP [0, 324, 326], TYOP [0, 90, 17],
   TYOP [0, 90, 328], TYOP [0, 329, 327], TYOP [0, 324, 330],
   TYOP [0, 18, 24], TYOP [0, 332, 331], TYOP [0, 332, 333],
   TYOP [0, 332, 334], TYOP [0, 332, 335], TYOP [0, 24, 336],
   TYOP [0, 17, 17], TYOP [0, 338, 337], TYOP [0, 17, 339],
   TYOP [0, 17, 340], TYOP [0, 18, 341], TYOP [0, 18, 3],
   TYOP [0, 36, 343], TYOP [0, 38, 344], TYOP [0, 32, 345],
   TYOP [0, 17, 3], TYOP [0, 347, 346], TYOP [0, 16, 16], TYOP [0, 25, 56],
   TYOP [0, 23, 20], TYOP [0, 19, 243], TYOP [0, 51, 352],
   TYOP [0, 24, 22], TYOP [0, 16, 17], TYOP [0, 85, 227],
   TYOP [0, 83, 223], TYOP [0, 25, 25], TYOP [0, 358, 25],
   TYOP [0, 92, 359], TYOP [0, 23, 23], TYOP [0, 361, 23],
   TYOP [0, 92, 362], TYOP [0, 24, 24], TYOP [0, 364, 24],
   TYOP [0, 92, 365], TYOP [0, 21, 61], TYOP [0, 42, 3], TYOP [0, 34, 368],
   TYOP [0, 19, 3], TYOP [0, 343, 370], TYOP [0, 45, 3],
   TYOP [0, 370, 372], TYOP [0, 349, 16], TYOP [0, 16, 374],
   TYOP [0, 17, 375], TYOP [0, 16, 18], TYOP [0, 377, 18],
   TYOP [0, 18, 378], TYOP [0, 17, 379], TYOP [0, 40, 347],
   TYOP [0, 68, 51], TYOP [0, 68, 57]]
  end
  val _ = Theory.incorporate_consts "ssm" tyvector
     [("trap", 2), ("trType_size", 6), ("trType_CASE", 12),
      ("propCommandList", 20), ("inputList", 22),
      ("extractPropCommand", 23), ("extractInput", 24),
      ("extractCommand", 25), ("exec", 2), ("discard", 2),
      ("configuration_size", 41), ("configuration_CASE", 54),
      ("commandList", 56), ("authenticationTest", 58), ("TR", 69),
      ("CFGInterpret", 70), ("CFG", 76)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("'configuration'", 83), TMV("'trType'", 85), TMV("M", 67),
   TMV("M", 28), TMV("M", 1), TMV("M'", 28), TMV("M'", 1), TMV("NS", 87),
   TMV("Oi", 64), TMV("Os", 63), TMV("Out", 89), TMV("P", 90),
   TMV("P", 59), TMV("P", 70), TMV("P", 91), TMV("P'", 51), TMV("R", 92),
   TMV("TR'", 69), TMV("a", 0), TMV("a", 18), TMV("a'", 0), TMV("a0", 51),
   TMV("a0", 68), TMV("a0", 84), TMV("a0'", 51), TMV("a0'", 82),
   TMV("a1", 48), TMV("a1", 61), TMV("a1'", 48), TMV("a2", 28),
   TMV("a2", 20), TMV("a2'", 20), TMV("a3", 28), TMV("a3", 45),
   TMV("a3'", 45), TMV("a4", 26), TMV("a4'", 26), TMV("a5", 42),
   TMV("a5'", 42), TMV("c", 0), TMV("c", 28), TMV("cc", 28),
   TMV("cmd", 16), TMV("configuration", 93), TMV("context", 20),
   TMV("elementTest", 51), TMV("extractCommand", 25),
   TMV("extractInput", 24), TMV("extractPropCommand", 23), TMV("f", 8),
   TMV("f", 5), TMV("f", 40), TMV("f", 51), TMV("f", 52), TMV("f'", 8),
   TMV("f'", 52), TMV("f0", 8), TMV("f0", 48), TMV("f1", 8), TMV("f1", 38),
   TMV("f1", 20), TMV("f1'", 8), TMV("f2", 8), TMV("f2", 36),
   TMV("f2'", 8), TMV("f3", 34), TMV("f4", 32), TMV("f5", 30),
   TMV("fn", 94), TMV("fn", 95), TMV("ins", 45), TMV("l", 45),
   TMV("l0", 42), TMV("n", 3), TMV("outStream", 42), TMV("outs", 42),
   TMV("p", 50), TMV("q", 50), TMV("rep", 96), TMV("rep", 97),
   TMV("s", 26), TMV("state", 26), TMV("stateInterp", 48), TMV("t", 1),
   TMV("trType", 100), TMV("tt", 1), TMV("v", 18), TMV("v", 67),
   TMV("v", 17), TMV("v1", 17), TMV("v1", 64), TMV("v10", 18),
   TMV("v10", 51), TMV("v100", 18), TMV("v101", 101), TMV("v102", 101),
   TMV("v103", 101), TMV("v104", 101), TMV("v105", 101), TMV("v106", 101),
   TMV("v107", 101), TMV("v108", 101), TMV("v109", 102), TMV("v11", 18),
   TMV("v11", 48), TMV("v110", 102), TMV("v111", 102), TMV("v112", 102),
   TMV("v113", 102), TMV("v114", 102), TMV("v115", 102), TMV("v116", 102),
   TMV("v117", 3), TMV("v118", 3), TMV("v119", 3), TMV("v12", 18),
   TMV("v12", 20), TMV("v120", 3), TMV("v121", 3), TMV("v122", 3),
   TMV("v123", 3), TMV("v124", 3), TMV("v125", 3), TMV("v126", 3),
   TMV("v127", 3), TMV("v128", 3), TMV("v129", 90), TMV("v13", 26),
   TMV("v13", 18), TMV("v130", 90), TMV("v131", 90), TMV("v132", 90),
   TMV("v133", 90), TMV("v134", 90), TMV("v135", 90), TMV("v136", 90),
   TMV("v137", 90), TMV("v138", 90), TMV("v139", 90), TMV("v14", 18),
   TMV("v14", 42), TMV("v140", 90), TMV("v141", 90), TMV("v142", 90),
   TMV("v143", 90), TMV("v144", 90), TMV("v145", 90), TMV("v146", 90),
   TMV("v147", 90), TMV("v148", 90), TMV("v15", 18), TMV("v15", 68),
   TMV("v16", 18), TMV("v17", 18), TMV("v18", 18), TMV("v19", 18),
   TMV("v2", 18), TMV("v2", 63), TMV("v21", 18), TMV("v22", 90),
   TMV("v23", 90), TMV("v24", 90), TMV("v25", 90), TMV("v26", 90),
   TMV("v27", 18), TMV("v28", 90), TMV("v29", 18), TMV("v3", 18),
   TMV("v3", 28), TMV("v30", 90), TMV("v31", 90), TMV("v32", 18),
   TMV("v33", 90), TMV("v34", 90), TMV("v35", 18), TMV("v36", 101),
   TMV("v37", 101), TMV("v38", 101), TMV("v39", 101), TMV("v4", 18),
   TMV("v40", 101), TMV("v41", 101), TMV("v42", 101), TMV("v43", 101),
   TMV("v44", 102), TMV("v45", 102), TMV("v46", 102), TMV("v47", 102),
   TMV("v48", 102), TMV("v49", 102), TMV("v5", 18), TMV("v50", 102),
   TMV("v51", 102), TMV("v52", 3), TMV("v53", 3), TMV("v54", 3),
   TMV("v55", 3), TMV("v56", 3), TMV("v57", 3), TMV("v58", 3),
   TMV("v59", 3), TMV("v6", 18), TMV("v60", 3), TMV("v61", 3),
   TMV("v62", 3), TMV("v63", 3), TMV("v64", 17), TMV("v65", 18),
   TMV("v66", 18), TMV("v67", 18), TMV("v68", 18), TMV("v69", 18),
   TMV("v7", 18), TMV("v70", 18), TMV("v71", 18), TMV("v72", 18),
   TMV("v73", 18), TMV("v74", 18), TMV("v75", 18), TMV("v76", 18),
   TMV("v77", 18), TMV("v78", 18), TMV("v79", 18), TMV("v8", 18),
   TMV("v80", 18), TMV("v81", 18), TMV("v82", 18), TMV("v83", 90),
   TMV("v84", 18), TMV("v85", 90), TMV("v86", 18), TMV("v87", 90),
   TMV("v88", 90), TMV("v89", 90), TMV("v9", 18), TMV("v90", 90),
   TMV("v91", 90), TMV("v92", 18), TMV("v93", 90), TMV("v94", 18),
   TMV("v95", 90), TMV("v96", 90), TMV("v97", 18), TMV("v98", 90),
   TMV("v99", 90), TMV("x", 19), TMV("x", 17), TMV("xs", 19), TMC(15, 104),
   TMC(15, 106), TMC(15, 108), TMC(15, 109), TMC(15, 111), TMC(15, 113),
   TMC(15, 115), TMC(15, 117), TMC(15, 118), TMC(15, 120), TMC(15, 122),
   TMC(15, 124), TMC(15, 126), TMC(15, 128), TMC(15, 130), TMC(15, 132),
   TMC(15, 134), TMC(15, 136), TMC(15, 138), TMC(15, 140), TMC(15, 141),
   TMC(15, 142), TMC(15, 144), TMC(15, 146), TMC(15, 148), TMC(15, 150),
   TMC(15, 152), TMC(15, 154), TMC(15, 156), TMC(15, 158), TMC(15, 159),
   TMC(15, 161), TMC(15, 163), TMC(15, 165), TMC(15, 167), TMC(15, 169),
   TMC(15, 171), TMC(15, 151), TMC(15, 153), TMC(15, 155), TMC(15, 173),
   TMC(16, 175), TMC(17, 177), TMC(17, 179), TMC(17, 181), TMC(17, 183),
   TMC(17, 185), TMC(17, 187), TMC(17, 189), TMC(18, 191), TMC(19, 3),
   TMC(20, 193), TMC(20, 194), TMC(20, 195), TMC(20, 196), TMC(20, 92),
   TMC(20, 191), TMC(20, 60), TMC(20, 197), TMC(20, 199), TMC(20, 201),
   TMC(20, 202), TMC(20, 204), TMC(20, 205), TMC(20, 206), TMC(20, 208),
   TMC(20, 209), TMC(20, 210), TMC(20, 211), TMC(20, 213), TMC(20, 214),
   TMC(20, 215), TMC(20, 216), TMC(20, 217), TMC(20, 218), TMC(20, 219),
   TMC(20, 220), TMC(21, 191), TMC(22, 104), TMC(22, 108), TMC(22, 113),
   TMC(22, 134), TMC(22, 136), TMC(22, 138), TMC(22, 141), TMC(22, 222),
   TMC(22, 224), TMC(22, 146), TMC(22, 226), TMC(22, 228), TMC(22, 158),
   TMC(22, 159), TMC(22, 161), TMC(22, 167), TMC(22, 169), TMC(23, 230),
   TMC(24, 16), TMC(24, 18), TMC(24, 17), TMC(25, 174), TMC(26, 84),
   TMC(26, 82), TMC(27, 76), TMC(28, 70), TMC(29, 232), TMC(29, 234),
   TMC(30, 238), TMC(30, 242), TMC(31, 190), TMC(32, 18), TMC(33, 246),
   TMC(34, 278), TMC(34, 310), TMC(34, 342), TMC(35, 348), TMC(36, 349),
   TMC(36, 23), TMC(36, 338), TMC(37, 350), TMC(37, 351), TMC(37, 353),
   TMC(37, 354), TMC(38, 45), TMC(39, 17), TMC(40, 174), TMC(41, 355),
   TMC(42, 174), TMC(43, 50), TMC(44, 69), TMC(45, 18), TMC(46, 356),
   TMC(46, 357), TMC(47, 229), TMC(48, 360), TMC(48, 363), TMC(48, 366),
   TMC(49, 3), TMC(50, 191), TMC(51, 300), TMC(52, 58), TMC(53, 56),
   TMC(54, 54), TMC(55, 41), TMC(56, 292), TMC(57, 2), TMC(57, 367),
   TMC(58, 289), TMC(59, 285), TMC(60, 300), TMC(61, 289), TMC(62, 280),
   TMC(63, 285), TMC(64, 2), TMC(64, 367), TMC(65, 25), TMC(66, 24),
   TMC(67, 23), TMC(68, 300), TMC(69, 22), TMC(70, 369), TMC(70, 371),
   TMC(70, 373), TMC(71, 280), TMC(72, 280), TMC(73, 23), TMC(74, 376),
   TMC(74, 380), TMC(75, 381), TMC(76, 300), TMC(77, 306), TMC(78, 20),
   TMC(79, 293), TMC(80, 382), TMC(81, 383), TMC(82, 292), TMC(83, 297),
   TMC(84, 12), TMC(85, 6), TMC(86, 2), TMC(86, 367), TMC(87, 190)]
  end
  structure ThmBind = struct
    val DT = Thm.disk_thm
    val read = Term.read_raw tmvector
  end
  fun op trType_TY_DEF x = x
    val op trType_TY_DEF =
    ThmBind.DT(((("ssm",0),[("bool",[26])]),["DISK_THM"]),
               [ThmBind.read"%337%79%378%23%274%1%325%285%23%325%385%326%18%321$1@%18%354%298@$0@%73%348|@|$0@2|@2%385%326%18%321$1@%18%354%374%298@2$0@%73%348|@|$0@2|@2%326%18%321$1@%18%354%374%374%298@3$0@%73%348|@|$0@2|@4$1$0@2|@2$0$1@2|@|@$0@|@"])
  fun op trType_case_def x = x
    val op trType_case_def =
    ThmBind.DT(((("ssm",8),
                [("bool",[26,180]),("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%297%248%18%257%49%257%58%257%62%299%424%392$3@2$2@$1@$0@2$2$3@2|@|@|@|@2%297%248%18%257%49%257%58%257%62%299%424%426$3@2$2@$1@$0@2$1$3@2|@|@|@|@2%248%18%257%49%257%58%257%62%299%424%400$3@2$2@$1@$0@2$0$3@2|@|@|@|@3"])
  fun op trType_size_def x = x
    val op trType_size_def =
    ThmBind.DT(((("ssm",9),
                [("bool",[26,180]),("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%297%258%50%248%18%318%425$1@%392$0@3%289%372%347%384@3$1$0@3|@|@2%297%258%50%248%18%318%425$1@%426$0@3%289%372%347%384@3$1$0@3|@|@2%258%50%248%18%318%425$1@%400$0@3%289%372%347%384@3$1$0@3|@|@3"])
  fun op configuration_TY_DEF x = x
    val op configuration_TY_DEF =
    ThmBind.DT(((("ssm",19),[("bool",[26])]),["DISK_THM"]),
               [ThmBind.read"%334%78%379%25%275%0%325%286%25%325%332%21%329%26%335%30%340%33%327%35%338%37%322$6@%21%26%30%33%35%37%355%298@%293$5@%292$4@%294$3@%295$2@%290$1@$0@6%73%349|@||||||$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@2$1$0@2|@2$0$1@2|@|@$0@|@"])
  fun op configuration_case_def x = x
    val op configuration_case_def =
    ThmBind.DT(((("ssm",23),
                [("bool",[26,180]),("ind_type",[33,34]),("pair",[8,9]),
                 ("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%268%21%264%26%271%30%279%33%250%35%277%37%270%53%299%389%350$6@$5@$4@$3@$2@$1@2$0@2$0$6@$5@$4@$3@$2@$1@2|@|@|@|@|@|@|@"])
  fun op configuration_size_def x = x
    val op configuration_size_def =
    ThmBind.DT(((("ssm",24),
                [("bool",[26,180]),("ind_type",[33,34]),("pair",[8,9]),
                 ("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%259%51%260%59%261%63%262%65%263%66%267%67%268%21%264%26%271%30%279%33%250%35%277%37%318%390$11@$10@$9@$8@$7@$6@%350$5@$4@$3@$2@$1@$0@3%289%372%347%384@3%289%409%408%362%415$11@2$7@$10@$9@3$2@2%289$6$1@2%407$8@$0@5|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op authenticationTest_def x = x
    val op authenticationTest_def =
    ThmBind.DT(((("ssm",36),[]),[]),
               [ThmBind.read"%268%45%278%245%304%387$1@$0@2%358%76%77%297$1@$0@||@%375@%368$1@$0@3|@|@"])
  fun op extractCommand_primitive_def x = x
    val op extractCommand_primitive_def =
    ThmBind.DT(((("ssm",37),[]),[]),
               [ThmBind.read"%307%402@%381%343%16%380$0@|@2%46%19%359$0@%344@%344@%88%344|@%156%344|@%179%190%344||@%223%234%344||@%115%128%344||@%152%153%344||@%11%158%359$0@%344@%344@%206%413$0@%344@%42%363$0@|@|@%207%344|@%209%210%344||@%214%215%344||@%218%219%344||@%222%224%344||@%227%228%344||@%231%232%344||@%236%237%344||@%240%241%242%344|||@%94%95%344||@%98%99%344||@%102%105%344||@%108%109%344||@%112%113%344||@%118%119%344||@%122%123%344||@||@%159%160%344||@%163%164%344||@%169%170%171%344|||@%175%176%344||@%180%181%344||@%184%185%344||@%188%189%344||@%193%194%344||@%197%198%344||@%202%203%344||@||@2"])
  fun op commandList_def x = x
    val op commandList_def =
    ThmBind.DT(((("ssm",40),[]),[]),
               [ThmBind.read"%278%245%313%388$0@2%366%402@$0@2|@"])
  fun op extractPropCommand_primitive_def x = x
    val op extractPropCommand_primitive_def =
    ThmBind.DT(((("ssm",41),[]),[]),
               [ThmBind.read"%308%404@%382%343%16%380$0@|@2%48%19%360$0@%345@%345@%88%345|@%156%345|@%179%190%345||@%223%234%345||@%115%128%345||@%152%153%345||@%11%158%360$0@%345@%345@%206%414$0@%345@%42%364%417%373$0@3|@|@%207%345|@%209%210%345||@%214%215%345||@%218%219%345||@%222%224%345||@%227%228%345||@%231%232%345||@%236%237%345||@%240%241%242%345|||@%94%95%345||@%98%99%345||@%102%105%345||@%108%109%345||@%112%113%345||@%118%119%345||@%122%123%345||@||@%159%160%345||@%163%164%345||@%169%170%171%345|||@%175%176%345||@%180%181%345||@%184%185%345||@%188%189%345||@%193%194%345||@%197%198%345||@%202%203%345||@||@2"])
  fun op propCommandList_def x = x
    val op propCommandList_def =
    ThmBind.DT(((("ssm",44),[]),[]),
               [ThmBind.read"%278%245%315%418$0@2%367%404@$0@2|@"])
  fun op extractInput_primitive_def x = x
    val op extractInput_primitive_def =
    ThmBind.DT(((("ssm",45),[]),[]),
               [ThmBind.read"%310%403@%383%343%16%380$0@|@2%47%19%361$0@%346@%346@%88%346|@%156%346|@%179%190%346||@%223%234%346||@%115%128%346||@%152%153%346||@%11%158%361$0@%346@%346@%246%365$0@|@%207%346|@%209%210%346||@%214%215%346||@%218%219%346||@%222%224%346||@%227%228%346||@%231%232%346||@%236%237%346||@%240%241%242%346|||@%94%95%346||@%98%99%346||@%102%105%346||@%108%109%346||@%112%113%346||@%118%119%346||@%122%123%346||@||@%159%160%346||@%163%164%346||@%169%170%171%346|||@%175%176%346||@%180%181%346||@%184%185%346||@%188%189%346||@%193%194%346||@%197%198%346||@%202%203%346||@||@2"])
  fun op inputList_def x = x
    val op inputList_def =
    ThmBind.DT(((("ssm",48),[]),[]),
               [ThmBind.read"%278%247%317%406$0@2%369%403@$0@2|@"])
  fun op TR_def x = x
    val op TR_def =
    ThmBind.DT(((("ssm",49),[]),[]),
               [ThmBind.read"%312%376@%22%27%29%32%273%17%325%284%22%288%27%256%29%256%32%325%385%332%45%331%7%328%2%341%8%342%9%330%10%327%80%335%44%329%82%339%245%340%70%338%75%297%320$15@%291$9@%296$8@$7@4%297%324$14@%401%406$2@4%297%305$13@%350$11@$3@$4@%353$2@$1@2$5@$0@3%297%305$12@%350$11@$3@$4@$1@$10$5@%401%406$2@4%352$6$5@%401%406$2@4$0@4%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@2%385%332%45%331%7%328%2%341%8%342%9%330%10%327%80%335%44%329%82%339%245%340%70%338%75%297%320$15@%291$9@%296$8@$7@4%297%324$14@%427%406$2@4%297%305$13@%350$11@$3@$4@%353$2@$1@2$5@$0@3%297%305$12@%350$11@$3@$4@$1@$10$5@%427%406$2@4%352$6$5@%427%406$2@4$0@4%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@2%332%45%331%7%328%2%341%8%342%9%330%10%327%80%335%44%329%82%339%245%340%70%338%75%297%320$15@%291$9@%296$8@$7@4%297%324$14@%393%406$2@4%297%305$13@%350$11@$3@$4@%353$2@$1@2$5@$0@3%297%305$12@%350$11@$3@$4@$1@$10$5@%393%406$2@4%352$6$5@%393%406$2@4$0@4%428%387$11@$2@6|@|@|@|@|@|@|@|@|@|@|@|@4$4$3@$2@$1@$0@2|@|@|@|@2$0$4@$3@$2@$1@2|@||||@"])
  fun op datatype_trType x = x
    val op datatype_trType =
    ThmBind.DT(((("ssm",10),[("bool",[25,170])]),["DISK_THM"]),
               [ThmBind.read"%356%84%392@%426@%400@2"])
  fun op trType_11 x = x
    val op trType_11 =
    ThmBind.DT(((("ssm",11),
                [("bool",[26,55,62,180]),("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%297%248%18%248%20%304%323%392$1@2%392$0@3%300$1@$0@2|@|@2%297%248%18%248%20%304%323%426$1@2%426$0@3%300$1@$0@2|@|@2%248%18%248%20%304%323%400$1@2%400$0@3%300$1@$0@2|@|@3"])
  fun op trType_distinct x = x
    val op trType_distinct =
    ThmBind.DT(((("ssm",12),
                [("bool",[25,26,35,46,50,53,55,62,180]),
                 ("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%297%248%20%248%18%428%323%392$0@2%426$1@3|@|@2%297%248%20%248%18%428%323%392$0@2%400$1@3|@|@2%248%20%248%18%428%323%426$0@2%400$1@3|@|@3"])
  fun op trType_case_cong x = x
    val op trType_case_cong =
    ThmBind.DT(((("ssm",13),
                [("bool",[26,180]),
                 ("ssm",[1,2,3,4,5,6,7,8])]),["DISK_THM"]),
               [ThmBind.read"%287%4%287%6%257%49%257%58%257%62%325%297%323$4@$3@2%297%248%18%325%323$4@%392$0@3%299$3$0@2%54$0@3|@2%297%248%18%325%323$4@%426$0@3%299$2$0@2%61$0@3|@2%248%18%325%323$4@%400$0@3%299$1$0@2%64$0@3|@5%299%424$4@$2@$1@$0@2%424$3@%54@%61@%64@3|@|@|@|@|@"])
  fun op trType_nchotomy x = x
    val op trType_nchotomy =
    ThmBind.DT(((("ssm",14),
                [("bool",[26,180]),("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%287%85%385%326%39%323$1@%392$0@2|@2%385%326%39%323$1@%426$0@2|@2%326%39%323$1@%400$0@2|@3|@"])
  fun op trType_Axiom x = x
    val op trType_Axiom =
    ThmBind.DT(((("ssm",15),
                [("bool",[26,180]),("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%257%56%257%58%257%62%336%69%297%248%18%299$1%392$0@3$4$0@2|@2%297%248%18%299$1%426$0@3$3$0@2|@2%248%18%299$1%400$0@3$2$0@2|@3|@|@|@|@"])
  fun op trType_induction x = x
    val op trType_induction =
    ThmBind.DT(((("ssm",16),
                [("bool",[26]),("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%276%14%325%297%248%39$1%392$0@2|@2%297%248%39$1%426$0@2|@2%248%39$1%400$0@2|@4%287%83$1$0@|@2|@"])
  fun op trType_distinct_clauses x = x
    val op trType_distinct_clauses =
    ThmBind.DT(((("ssm",17),
                [("bool",[25,26,35,46,50,53,55,62,180]),
                 ("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%297%248%20%248%18%428%323%392$0@2%426$1@3|@|@2%297%248%20%248%18%428%323%392$0@2%400$1@3|@|@2%248%20%248%18%428%323%426$0@2%400$1@3|@|@3"])
  fun op trType_one_one x = x
    val op trType_one_one =
    ThmBind.DT(((("ssm",18),
                [("bool",[26,55,62,180]),("ind_type",[33,34]),
                 ("ssm",[1,2,3,4,5,6,7])]),["DISK_THM"]),
               [ThmBind.read"%297%248%18%248%20%304%323%392$1@2%392$0@3%300$1@$0@2|@|@2%297%248%18%248%20%304%323%426$1@2%426$0@3%300$1@$0@2|@|@2%248%18%248%20%304%323%400$1@2%400$0@3%300$1@$0@2|@|@3"])
  fun op datatype_configuration x = x
    val op datatype_configuration =
    ThmBind.DT(((("ssm",25),[("bool",[25,170])]),["DISK_THM"]),
               [ThmBind.read"%356%43%350@2"])
  fun op configuration_11 x = x
    val op configuration_11 =
    ThmBind.DT(((("ssm",26),
                [("bool",[26,50,55,62,180]),("ind_type",[33,34]),
                 ("pair",[8,9]),("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%268%21%264%26%271%30%279%33%250%35%277%37%268%24%264%28%271%31%279%34%250%36%277%38%304%305%350$11@$10@$9@$8@$7@$6@2%350$5@$4@$3@$2@$1@$0@3%297%309$11@$5@2%297%306$10@$4@2%297%311$9@$3@2%297%316$8@$2@2%297%302$7@$1@2%314$6@$0@7|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op configuration_case_cong x = x
    val op configuration_case_cong =
    ThmBind.DT(((("ssm",27),
                [("bool",[26,180]),("ssm",[20,21,22,23])]),["DISK_THM"]),
               [ThmBind.read"%256%3%256%5%270%53%325%297%305$2@$1@2%268%21%264%26%271%30%279%33%250%35%277%37%325%305$7@%350$5@$4@$3@$2@$1@$0@3%299$6$5@$4@$3@$2@$1@$0@2%55$5@$4@$3@$2@$1@$0@3|@|@|@|@|@|@3%299%389$2@$0@2%389$1@%55@3|@|@|@"])
  fun op configuration_nchotomy x = x
    val op configuration_nchotomy =
    ThmBind.DT(((("ssm",28),
                [("bool",[26,180]),("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%256%41%332%52%329%57%335%60%340%71%327%80%338%72%305$6@%350$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@|@"])
  fun op configuration_Axiom x = x
    val op configuration_Axiom =
    ThmBind.DT(((("ssm",29),
                [("bool",[26,180]),("ind_type",[33,34]),("pair",[8,9]),
                 ("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%270%53%333%68%268%21%264%26%271%30%279%33%250%35%277%37%299$6%350$5@$4@$3@$2@$1@$0@3$7$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@|@|@"])
  fun op configuration_induction x = x
    val op configuration_induction =
    ThmBind.DT(((("ssm",30),
                [("bool",[26]),("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%269%12%325%268%52%264%57%271%60%279%71%250%80%277%72$6%350$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@2%256%40$1$0@|@2|@"])
  fun op configuration_one_one x = x
    val op configuration_one_one =
    ThmBind.DT(((("ssm",31),
                [("bool",[26,50,55,62,180]),("ind_type",[33,34]),
                 ("pair",[8,9]),("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%268%21%264%26%271%30%279%33%250%35%277%37%268%24%264%28%271%31%279%34%250%36%277%38%304%305%350$11@$10@$9@$8@$7@$6@2%350$5@$4@$3@$2@$1@$0@3%297%309$11@$5@2%297%306$10@$4@2%297%311$9@$3@2%297%316$8@$2@2%297%302$7@$1@2%314$6@$0@7|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op CFGInterpret_ind x = x
    val op CFGInterpret_ind =
    ThmBind.DT(((("ssm",34),
                [("bool",[25,26,46,47,52,53,57,62,71,75,76,77,79,180]),
                 ("list",[46]),("pair",[5,16]),("relation",[107,113]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15]),
                 ("ssm",[20,21,22])]),["DISK_THM"]),
               [ThmBind.read"%272%13%325%297%253%2%282%8%283%9%268%45%264%82%271%44%278%245%279%70%250%81%277%74$10%291$9@%296$8@$7@3%350$6@$5@$4@%353$3@$2@2$1@$0@2|@|@|@|@|@|@|@|@|@|@2%284%151%268%92%264%104%271%116%250%127%277%140$6$5@%350$4@$3@$2@%370@$1@$0@2|@|@|@|@|@|@3%253%87%282%90%283%157%256%168$4%291$3@%296$2@$1@3$0@|@|@|@|@2|@"])
  fun op CFGInterpret_def x = x
    val op CFGInterpret_def =
    ThmBind.DT(((("ssm",35),
                [("bool",[15,57]),("combin",[19]),("list",[6]),
                 ("pair",[49]),("relation",[113,132]),
                 ("ssm",[23,32,33])]),["DISK_THM"]),
               [ThmBind.read"%304%351%291%2@%296%8@%9@3%350%45@%82@%44@%353%245@%70@2%81@%74@3%297%421%291%2@%296%8@%9@3%44%245@3%297%421%291%2@%296%8@%9@3%245@2%421%291%2@%296%8@%9@3%82%81@%245@5"])
  fun op extractCommand_ind x = x
    val op extractCommand_ind =
    ThmBind.DT(((("ssm",38),
                [("aclfoundation",[116]),
                 ("bool",[25,26,46,47,52,53,57,62,71,75,76,77,79]),
                 ("option",[6]),("relation",[107,113]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%268%15%325%297%254%11%249%42$2%422$1@%417%373$0@4|@|@2%297$0%377@2%297$0%357@2%297%281%89$1%417$0@2|@2%297%251%167$1%412$0@2|@2%297%251%201%251%212$2%386$1@$0@2|@|@2%297%251%91%251%103$2%416$1@$0@2|@|@2%297%251%139%251%150$2%405$1@$0@2|@|@2%297%251%154%251%155$2%396$1@$0@2|@|@2%297%254%126$1%422$0@%377@2|@2%297%254%129$1%422$0@%357@2|@2%297%254%131$1%422$0@%417%371@3|@2%297%254%132%251%208$2%422$1@%412$0@3|@|@2%297%254%133%251%211%251%213$3%422$2@%386$1@$0@3|@|@|@2%297%254%134%251%216%251%217$3%422$2@%416$1@$0@3|@|@|@2%297%254%135%251%220%251%221$3%422$2@%405$1@$0@3|@|@|@2%297%254%136%251%225%251%226$3%422$2@%396$1@$0@3|@|@|@2%297%254%137%254%229%251%230$3%422$2@%422$1@$0@3|@|@|@2%297%254%138%254%233%254%235$3%422$2@%423$1@$0@3|@|@|@2%297%254%141%254%238%251%239$3%422$2@%391$1@$0@3|@|@|@2%297%254%142%254%243%254%244%251%93$4%422$3@%419$2@$1@$0@3|@|@|@|@2%297%254%143%252%96%252%97$3%422$2@%394$1@$0@3|@|@|@2%297%254%144%252%100%252%101$3%422$2@%397$1@$0@3|@|@|@2%297%254%145%255%106%255%107$3%422$2@%395$1@$0@3|@|@|@2%297%254%146%255%110%255%111$3%422$2@%399$1@$0@3|@|@|@2%297%254%147%280%114%280%117$3%422$2@%398$1@$0@3|@|@|@2%297%254%148%280%120%280%121$3%422$2@%411$1@$0@3|@|@|@2%297%254%149%280%124%280%125$3%422$2@%410$1@$0@3|@|@|@2%297%254%161%254%162$2%423$1@$0@2|@|@2%297%254%165%251%166$2%391$1@$0@2|@|@2%297%254%172%254%173%251%174$3%419$2@$1@$0@2|@|@|@2%297%252%177%252%178$2%394$1@$0@2|@|@2%297%252%182%252%183$2%397$1@$0@2|@|@2%297%255%186%255%187$2%395$1@$0@2|@|@2%297%255%191%255%192$2%399$1@$0@2|@|@2%297%280%195%280%196$2%398$1@$0@2|@|@2%297%280%199%280%200$2%411$1@$0@2|@|@2%280%204%280%205$2%410$1@$0@2|@|@39%251%86$1$0@|@2|@"])
  fun op extractCommand_def x = x
    val op extractCommand_def =
    ThmBind.DT(((("ssm",39),
                [("aclfoundation",[110]),("bool",[15]),("combin",[19]),
                 ("option",[7]),("relation",[113,132]),
                 ("ssm",[37])]),["DISK_THM"]),
               [ThmBind.read"%301%402%422%11@%417%373%42@5%42@"])
  fun op extractPropCommand_ind x = x
    val op extractPropCommand_ind =
    ThmBind.DT(((("ssm",42),
                [("aclfoundation",[116]),
                 ("bool",[25,26,46,47,52,53,57,62,71,75,76,77,79]),
                 ("option",[6]),("relation",[107,113]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%268%15%325%297%254%11%249%42$2%422$1@%417%373$0@4|@|@2%297$0%377@2%297$0%357@2%297%281%89$1%417$0@2|@2%297%251%167$1%412$0@2|@2%297%251%201%251%212$2%386$1@$0@2|@|@2%297%251%91%251%103$2%416$1@$0@2|@|@2%297%251%139%251%150$2%405$1@$0@2|@|@2%297%251%154%251%155$2%396$1@$0@2|@|@2%297%254%126$1%422$0@%377@2|@2%297%254%129$1%422$0@%357@2|@2%297%254%131$1%422$0@%417%371@3|@2%297%254%132%251%208$2%422$1@%412$0@3|@|@2%297%254%133%251%211%251%213$3%422$2@%386$1@$0@3|@|@|@2%297%254%134%251%216%251%217$3%422$2@%416$1@$0@3|@|@|@2%297%254%135%251%220%251%221$3%422$2@%405$1@$0@3|@|@|@2%297%254%136%251%225%251%226$3%422$2@%396$1@$0@3|@|@|@2%297%254%137%254%229%251%230$3%422$2@%422$1@$0@3|@|@|@2%297%254%138%254%233%254%235$3%422$2@%423$1@$0@3|@|@|@2%297%254%141%254%238%251%239$3%422$2@%391$1@$0@3|@|@|@2%297%254%142%254%243%254%244%251%93$4%422$3@%419$2@$1@$0@3|@|@|@|@2%297%254%143%252%96%252%97$3%422$2@%394$1@$0@3|@|@|@2%297%254%144%252%100%252%101$3%422$2@%397$1@$0@3|@|@|@2%297%254%145%255%106%255%107$3%422$2@%395$1@$0@3|@|@|@2%297%254%146%255%110%255%111$3%422$2@%399$1@$0@3|@|@|@2%297%254%147%280%114%280%117$3%422$2@%398$1@$0@3|@|@|@2%297%254%148%280%120%280%121$3%422$2@%411$1@$0@3|@|@|@2%297%254%149%280%124%280%125$3%422$2@%410$1@$0@3|@|@|@2%297%254%161%254%162$2%423$1@$0@2|@|@2%297%254%165%251%166$2%391$1@$0@2|@|@2%297%254%172%254%173%251%174$3%419$2@$1@$0@2|@|@|@2%297%252%177%252%178$2%394$1@$0@2|@|@2%297%252%182%252%183$2%397$1@$0@2|@|@2%297%255%186%255%187$2%395$1@$0@2|@|@2%297%255%191%255%192$2%399$1@$0@2|@|@2%297%280%195%280%196$2%398$1@$0@2|@|@2%297%280%199%280%200$2%411$1@$0@2|@|@2%280%204%280%205$2%410$1@$0@2|@|@39%251%86$1$0@|@2|@"])
  fun op extractPropCommand_def x = x
    val op extractPropCommand_def =
    ThmBind.DT(((("ssm",43),
                [("aclfoundation",[110]),("bool",[15]),("combin",[19]),
                 ("option",[7]),("relation",[113,132]),
                 ("ssm",[41])]),["DISK_THM"]),
               [ThmBind.read"%303%404%422%11@%417%373%42@5%417%373%42@3"])
  fun op extractInput_ind x = x
    val op extractInput_ind =
    ThmBind.DT(((("ssm",46),
                [("aclfoundation",[116]),
                 ("bool",[25,26,46,47,52,53,57,62,71,75,76,77,79]),
                 ("relation",[107,113]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%268%15%325%297%254%11%281%246$2%422$1@%417$0@3|@|@2%297$0%377@2%297$0%357@2%297%281%89$1%417$0@2|@2%297%251%167$1%412$0@2|@2%297%251%201%251%212$2%386$1@$0@2|@|@2%297%251%91%251%103$2%416$1@$0@2|@|@2%297%251%139%251%150$2%405$1@$0@2|@|@2%297%251%154%251%155$2%396$1@$0@2|@|@2%297%254%126$1%422$0@%377@2|@2%297%254%129$1%422$0@%357@2|@2%297%254%130%251%208$2%422$1@%412$0@3|@|@2%297%254%131%251%211%251%213$3%422$2@%386$1@$0@3|@|@|@2%297%254%132%251%216%251%217$3%422$2@%416$1@$0@3|@|@|@2%297%254%133%251%220%251%221$3%422$2@%405$1@$0@3|@|@|@2%297%254%134%251%225%251%226$3%422$2@%396$1@$0@3|@|@|@2%297%254%135%254%229%251%230$3%422$2@%422$1@$0@3|@|@|@2%297%254%136%254%233%254%235$3%422$2@%423$1@$0@3|@|@|@2%297%254%137%254%238%251%239$3%422$2@%391$1@$0@3|@|@|@2%297%254%138%254%243%254%244%251%93$4%422$3@%419$2@$1@$0@3|@|@|@|@2%297%254%141%252%96%252%97$3%422$2@%394$1@$0@3|@|@|@2%297%254%142%252%100%252%101$3%422$2@%397$1@$0@3|@|@|@2%297%254%143%255%106%255%107$3%422$2@%395$1@$0@3|@|@|@2%297%254%144%255%110%255%111$3%422$2@%399$1@$0@3|@|@|@2%297%254%145%280%114%280%117$3%422$2@%398$1@$0@3|@|@|@2%297%254%146%280%120%280%121$3%422$2@%411$1@$0@3|@|@|@2%297%254%147%280%124%280%125$3%422$2@%410$1@$0@3|@|@|@2%297%254%161%254%162$2%423$1@$0@2|@|@2%297%254%165%251%166$2%391$1@$0@2|@|@2%297%254%172%254%173%251%174$3%419$2@$1@$0@2|@|@|@2%297%252%177%252%178$2%394$1@$0@2|@|@2%297%252%182%252%183$2%397$1@$0@2|@|@2%297%255%186%255%187$2%395$1@$0@2|@|@2%297%255%191%255%192$2%399$1@$0@2|@|@2%297%280%195%280%196$2%398$1@$0@2|@|@2%297%280%199%280%200$2%411$1@$0@2|@|@2%280%204%280%205$2%410$1@$0@2|@|@38%251%86$1$0@|@2|@"])
  fun op extractInput_def x = x
    val op extractInput_def =
    ThmBind.DT(((("ssm",47),
                [("aclfoundation",[110]),("bool",[15]),("combin",[19]),
                 ("relation",[113,132]),("ssm",[45])]),["DISK_THM"]),
               [ThmBind.read"%319%403%422%11@%417%246@4%246@"])
  fun op TR_rules x = x
    val op TR_rules =
    ThmBind.DT(((("ssm",50),[("bool",[26]),("ssm",[49])]),["DISK_THM"]),
               [ThmBind.read"%297%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@4%376%291$9@%296$8@$7@3%401%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%401%406$2@4%352$6$5@%401%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@2%297%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@4%376%291$9@%296$8@$7@3%427%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%427%406$2@4%352$6$5@%427%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@2%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%428%387$11@$2@3%376%291$9@%296$8@$7@3%393%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%393%406$2@4%352$6$5@%393%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@3"])
  fun op TR_ind x = x
    val op TR_ind =
    ThmBind.DT(((("ssm",51),[("bool",[26]),("ssm",[49])]),["DISK_THM"]),
               [ThmBind.read"%273%17%325%297%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@4$12%291$9@%296$8@$7@3%401%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%401%406$2@4%352$6$5@%401%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@2%297%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@4$12%291$9@%296$8@$7@3%427%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%427%406$2@4%352$6$5@%427%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@2%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%428%387$11@$2@3$12%291$9@%296$8@$7@3%393%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%393%406$2@4%352$6$5@%393%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@4%284%22%288%27%256%29%256%32%325%376$3@$2@$1@$0@2$4$3@$2@$1@$0@2|@|@|@|@2|@"])
  fun op TR_strongind x = x
    val op TR_strongind =
    ThmBind.DT(((("ssm",52),[("bool",[26]),("ssm",[49])]),["DISK_THM"]),
               [ThmBind.read"%273%17%325%297%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@4$12%291$9@%296$8@$7@3%401%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%401%406$2@4%352$6$5@%401%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@2%297%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@4$12%291$9@%296$8@$7@3%427%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%427%406$2@4%352$6$5@%427%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@2%268%45%266%7%253%2%282%8%283%9%265%10%250%80%271%44%264%82%278%245%279%70%277%75%325%428%387$11@$2@3$12%291$9@%296$8@$7@3%393%406$2@3%350$11@$3@$4@%353$2@$1@2$5@$0@2%350$11@$3@$4@$1@$10$5@%393%406$2@4%352$6$5@%393%406$2@4$0@4|@|@|@|@|@|@|@|@|@|@|@|@4%284%22%288%27%256%29%256%32%325%376$3@$2@$1@$0@2$4$3@$2@$1@$0@2|@|@|@|@2|@"])
  fun op TR_cases x = x
    val op TR_cases =
    ThmBind.DT(((("ssm",53),[("bool",[26]),("ssm",[49])]),["DISK_THM"]),
               [ThmBind.read"%284%22%288%27%256%29%256%32%304%376$3@$2@$1@$0@2%385%332%45%331%7%328%2%341%8%342%9%330%10%327%80%335%44%329%82%339%245%340%70%338%75%297%320$15@%291$9@%296$8@$7@4%297%324$14@%401%406$2@4%297%305$13@%350$11@$3@$4@%353$2@$1@2$5@$0@3%297%305$12@%350$11@$3@$4@$1@$10$5@%401%406$2@4%352$6$5@%401%406$2@4$0@4%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@2%385%332%45%331%7%328%2%341%8%342%9%330%10%327%80%335%44%329%82%339%245%340%70%338%75%297%320$15@%291$9@%296$8@$7@4%297%324$14@%427%406$2@4%297%305$13@%350$11@$3@$4@%353$2@$1@2$5@$0@3%297%305$12@%350$11@$3@$4@$1@$10$5@%427%406$2@4%352$6$5@%427%406$2@4$0@4%297%387$11@$2@2%351%291$9@%296$8@$7@3%350$11@$3@$4@%353$2@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@2%332%45%331%7%328%2%341%8%342%9%330%10%327%80%335%44%329%82%339%245%340%70%338%75%297%320$15@%291$9@%296$8@$7@4%297%324$14@%393%406$2@4%297%305$13@%350$11@$3@$4@%353$2@$1@2$5@$0@3%297%305$12@%350$11@$3@$4@$1@$10$5@%393%406$2@4%352$6$5@%393%406$2@4$0@4%428%387$11@$2@6|@|@|@|@|@|@|@|@|@|@|@|@4|@|@|@|@"])
  fun op TR_EQ_rules_thm x = x
    val op TR_EQ_rules_thm =
    ThmBind.DT(((("ssm",54),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("ind_type",[33,34]),("list",[9]),("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm",[1,2,3,4,5,6,7,20,21,22,49])]),["DISK_THM"]),
               [ThmBind.read"%297%304%376%291%2@%296%8@%9@3%401%406%245@3%350%45@%82@%44@%353%245@%70@2%80@%75@2%350%45@%82@%44@%70@%7%80@%401%406%245@4%352%10%80@%401%406%245@4%75@4%297%387%45@%245@2%351%291%2@%296%8@%9@3%350%45@%82@%44@%353%245@%70@2%80@%75@5%297%304%376%291%2@%296%8@%9@3%427%406%245@3%350%45@%82@%44@%353%245@%70@2%80@%75@2%350%45@%82@%44@%70@%7%80@%427%406%245@4%352%10%80@%427%406%245@4%75@4%297%387%45@%245@2%351%291%2@%296%8@%9@3%350%45@%82@%44@%353%245@%70@2%80@%75@5%304%376%291%2@%296%8@%9@3%393%406%245@3%350%45@%82@%44@%353%245@%70@2%80@%75@2%350%45@%82@%44@%70@%7%80@%393%406%245@4%352%10%80@%393%406%245@4%75@4%428%387%45@%245@5"])
  fun op TRrule0 x = x
    val op TRrule0 =
    ThmBind.DT(((("ssm",55),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("ind_type",[33,34]),("list",[9]),("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm",[1,2,3,4,5,6,7,20,21,22,49])]),["DISK_THM"]),
               [ThmBind.read"%304%376%291%2@%296%8@%9@3%401%406%245@3%350%45@%82@%44@%353%245@%70@2%80@%75@2%350%45@%82@%44@%70@%7%80@%401%406%245@4%352%10%80@%401%406%245@4%75@4%297%387%45@%245@2%351%291%2@%296%8@%9@3%350%45@%82@%44@%353%245@%70@2%80@%75@4"])
  fun op TRrule1 x = x
    val op TRrule1 =
    ThmBind.DT(((("ssm",56),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("ind_type",[33,34]),("list",[9]),("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm",[1,2,3,4,5,6,7,20,21,22,49])]),["DISK_THM"]),
               [ThmBind.read"%304%376%291%2@%296%8@%9@3%427%406%245@3%350%45@%82@%44@%353%245@%70@2%80@%75@2%350%45@%82@%44@%70@%7%80@%427%406%245@4%352%10%80@%427%406%245@4%75@4%297%387%45@%245@2%351%291%2@%296%8@%9@3%350%45@%82@%44@%353%245@%70@2%80@%75@4"])
  fun op TR_discard_cmd_rule x = x
    val op TR_discard_cmd_rule =
    ThmBind.DT(((("ssm",57),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("ind_type",[33,34]),("list",[9]),("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm",[1,2,3,4,5,6,7,20,21,22,49])]),["DISK_THM"]),
               [ThmBind.read"%304%376%291%2@%296%8@%9@3%393%406%245@3%350%45@%82@%44@%353%245@%70@2%80@%75@2%350%45@%82@%44@%70@%7%80@%393%406%245@4%352%10%80@%393%406%245@4%75@4%428%387%45@%245@3"])
  fun op TR_exec_cmd_rule x = x
    val op TR_exec_cmd_rule =
    ThmBind.DT(((("ssm",58),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("ind_type",[33,34]),("list",[9]),("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm",[1,2,3,4,5,6,7,20,21,22,49])]),["DISK_THM"]),
               [ThmBind.read"%268%45%271%44%264%82%278%245%279%70%250%80%277%75%325%253%2%282%8%283%9%325%351%291$2@%296$1@$0@3%350$9@$7@$8@%353$6@$5@2$4@$3@3%421%291$2@%296$1@$0@3%418$6@3|@|@|@2%266%7%265%10%253%2%282%8%283%9%304%376%291$2@%296$1@$0@3%401%406$8@3%350$11@$9@$10@%353$8@$7@2$6@$5@2%350$11@$9@$10@$7@$4$6@%401%406$8@4%352$3$6@%401%406$8@4$5@4%297%387$11@$8@2%297%351%291$2@%296$1@$0@3%350$11@$9@$10@%353$8@$7@2$6@$5@3%421%291$2@%296$1@$0@3%418$8@5|@|@|@|@|@2|@|@|@|@|@|@|@"])
  fun op TR_trap_cmd_rule x = x
    val op TR_trap_cmd_rule =
    ThmBind.DT(((("ssm",59),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("ind_type",[33,34]),("list",[9]),("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm",[1,2,3,4,5,6,7,20,21,22,49])]),["DISK_THM"]),
               [ThmBind.read"%268%45%271%44%264%82%278%245%279%70%250%80%277%75%325%253%2%282%8%283%9%325%351%291$2@%296$1@$0@3%350$9@$7@$8@%353$6@$5@2$4@$3@3%420%291$2@%296$1@$0@3%417%371@3|@|@|@2%266%7%265%10%253%2%282%8%283%9%304%376%291$2@%296$1@$0@3%427%406$8@3%350$11@$9@$10@%353$8@$7@2$6@$5@2%350$11@$9@$10@$7@$4$6@%427%406$8@4%352$3$6@%427%406$8@4$5@4%297%387$11@$8@2%297%351%291$2@%296$1@$0@3%350$11@$9@$10@%353$8@$7@2$6@$5@3%420%291$2@%296$1@$0@3%417%371@5|@|@|@|@|@2|@|@|@|@|@|@|@"])

  val _ = DB.bindl "ssm"
  [("trType_TY_DEF",trType_TY_DEF,DB.Def),
   ("trType_case_def",trType_case_def,DB.Def),
   ("trType_size_def",trType_size_def,DB.Def),
   ("configuration_TY_DEF",configuration_TY_DEF,DB.Def),
   ("configuration_case_def",configuration_case_def,DB.Def),
   ("configuration_size_def",configuration_size_def,DB.Def),
   ("authenticationTest_def",authenticationTest_def,DB.Def),
   ("extractCommand_primitive_def",extractCommand_primitive_def,DB.Def),
   ("commandList_def",commandList_def,DB.Def),
   ("extractPropCommand_primitive_def",
    extractPropCommand_primitive_def,
    DB.Def), ("propCommandList_def",propCommandList_def,DB.Def),
   ("extractInput_primitive_def",extractInput_primitive_def,DB.Def),
   ("inputList_def",inputList_def,DB.Def), ("TR_def",TR_def,DB.Def),
   ("datatype_trType",datatype_trType,DB.Thm),
   ("trType_11",trType_11,DB.Thm),
   ("trType_distinct",trType_distinct,DB.Thm),
   ("trType_case_cong",trType_case_cong,DB.Thm),
   ("trType_nchotomy",trType_nchotomy,DB.Thm),
   ("trType_Axiom",trType_Axiom,DB.Thm),
   ("trType_induction",trType_induction,DB.Thm),
   ("trType_distinct_clauses",trType_distinct_clauses,DB.Thm),
   ("trType_one_one",trType_one_one,DB.Thm),
   ("datatype_configuration",datatype_configuration,DB.Thm),
   ("configuration_11",configuration_11,DB.Thm),
   ("configuration_case_cong",configuration_case_cong,DB.Thm),
   ("configuration_nchotomy",configuration_nchotomy,DB.Thm),
   ("configuration_Axiom",configuration_Axiom,DB.Thm),
   ("configuration_induction",configuration_induction,DB.Thm),
   ("configuration_one_one",configuration_one_one,DB.Thm),
   ("CFGInterpret_ind",CFGInterpret_ind,DB.Thm),
   ("CFGInterpret_def",CFGInterpret_def,DB.Thm),
   ("extractCommand_ind",extractCommand_ind,DB.Thm),
   ("extractCommand_def",extractCommand_def,DB.Thm),
   ("extractPropCommand_ind",extractPropCommand_ind,DB.Thm),
   ("extractPropCommand_def",extractPropCommand_def,DB.Thm),
   ("extractInput_ind",extractInput_ind,DB.Thm),
   ("extractInput_def",extractInput_def,DB.Thm),
   ("TR_rules",TR_rules,DB.Thm), ("TR_ind",TR_ind,DB.Thm),
   ("TR_strongind",TR_strongind,DB.Thm), ("TR_cases",TR_cases,DB.Thm),
   ("TR_EQ_rules_thm",TR_EQ_rules_thm,DB.Thm), ("TRrule0",TRrule0,DB.Thm),
   ("TRrule1",TRrule1,DB.Thm),
   ("TR_discard_cmd_rule",TR_discard_cmd_rule,DB.Thm),
   ("TR_exec_cmd_rule",TR_exec_cmd_rule,DB.Thm),
   ("TR_trap_cmd_rule",TR_trap_cmd_rule,DB.Thm)]

  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm",
    thydataty = "rule_induction",
    read = ThmBind.read,
    data = "ssm.TR_strongind"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm",
    thydataty = "compute",
    read = ThmBind.read,
    data =
        "ssm.CFGInterpret_def ssm.inputList_def ssm.extractInput_def ssm.extractPropCommand_def ssm.propCommandList_def ssm.authenticationTest_def ssm.commandList_def ssm.extractCommand_def"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm",
    thydataty = "TypeGrammarDeltas",
    read = ThmBind.read,
    data = "NTY3.ssm,6.trTypeNTY3.ssm,13.configuration"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm",
    thydataty = "TermGrammarDeltas",
    read = ThmBind.read,
    data =
        "OO7.discard4.%392OO4.trap4.%426OO4.exec4.%400OO11.trType_CASE4.%424OO11.trType_size4.%425OO4.case4.%424OO3.CFG4.%350OO18.configuration_CASE4.%389OO18.configuration_size4.%390OO4.case4.%389OO12.CFGInterpret4.%351OO18.authenticationTest4.%387OO14.extractCommand4.%402OO11.commandList4.%388OO18.extractPropCommand4.%404OO15.propCommandList4.%418OO12.extractInput4.%403OO9.inputList4.%406OO2.TR4.%376"
  }
  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val ssm_grammars = merge_grammars ["satList"]
  local
  val (tyUDs, tmUDs) = GrammarDeltas.thy_deltas{thyname="ssm"}
  val addtmUDs = term_grammar.add_deltas tmUDs
  val addtyUDs = type_grammar.apply_deltas tyUDs
  in
  val ssm_grammars = 
    Portable.## (addtyUDs,addtmUDs) ssm_grammars
  val _ = Parse.grammarDB_insert("ssm",ssm_grammars)
  val _ = Parse.temp_set_grammars (addtyUDs (Parse.type_grammar()), addtmUDs (Parse.term_grammar()))
  end (* addUDs local *)
  end


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG trType_Axiom,
           case_def=trType_case_def,
           case_cong=trType_case_cong,
           induction=ORIG trType_induction,
           nchotomy=trType_nchotomy,
           size=SOME(Parse.Term`(ssm$trType_size) :('cmdlist -> num$num) -> 'cmdlist ssm$trType -> num$num`,
                     ORIG trType_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME trType_11,
           distinct=SOME trType_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG configuration_Axiom,
           case_def=configuration_case_def,
           case_cong=configuration_case_cong,
           induction=ORIG configuration_induction,
           nchotomy=configuration_nchotomy,
           size=SOME(Parse.Term`(ssm$configuration_size) :('command -> num$num) ->
('d -> num$num) ->
('e -> num$num) ->
('output -> num$num) ->
('principal -> num$num) ->
('state -> num$num) ->
('command, 'd, 'e, 'output, 'principal, 'state) ssm$configuration ->
num$num`,
                     ORIG configuration_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME configuration_11,
           distinct=NONE,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];

val _ = if !Globals.print_thy_loads then TextIO.print "done\n" else ()
val _ = Theory.load_complete "ssm"
end
